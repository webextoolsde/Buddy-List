#if canImport(UIKit)
import UIKit

@objc public protocol MomentumThemeTextColorPaletteProtocol: AnyObject {
    var primaryNormal: UIColor { get }
    var primaryDisabled: UIColor { get }
    var secondaryNormal: UIColor { get }
    var errorNormal: UIColor { get }
    var errorHover: UIColor { get }
    var errorActive: UIColor { get }
    var successNormal: UIColor { get }
    var successHover: UIColor { get }
    var successActive: UIColor { get }
    var warningNormal: UIColor { get }
    var warningHover: UIColor { get }
    var warningActive: UIColor { get }
    var highlight: UIColor { get }
    var accentNormal: UIColor { get }
    var accentHover: UIColor { get }
    var accentActive: UIColor { get }
    var teamdefaultNormal: UIColor { get }
    var teamdefaultHover: UIColor { get }
    var teamdefaultActive: UIColor { get }
    var alertPurpleNormal: UIColor { get }
    var alertPurpleHover: UIColor { get }
    var alertPurpleActive: UIColor { get }
    var alertOrangeNormal: UIColor { get }
    var alertOrangeHover: UIColor { get }
    var alertOrangeActive: UIColor { get }
    var teamCobaltNormal: UIColor { get }
    var teamCobaltHover: UIColor { get }
    var teamCobaltActive: UIColor { get }
    var teamCyanNormal: UIColor { get }
    var teamCyanHover: UIColor { get }
    var teamCyanActive: UIColor { get }
    var teamMintNormal: UIColor { get }
    var teamMintHover: UIColor { get }
    var teamMintActive: UIColor { get }
    var teamLimeNormal: UIColor { get }
    var teamLimeHover: UIColor { get }
    var teamLimeActive: UIColor { get }
    var teamGoldNormal: UIColor { get }
    var teamGoldHover: UIColor { get }
    var teamGoldActive: UIColor { get }
    var teamOrangeNormal: UIColor { get }
    var teamOrangeHover: UIColor { get }
    var teamOrangeActive: UIColor { get }
    var teamPinkNormal: UIColor { get }
    var teamPinkHover: UIColor { get }
    var teamPinkActive: UIColor { get }
    var teamPurpleNormal: UIColor { get }
    var teamPurpleHover: UIColor { get }
    var teamPurpleActive: UIColor { get }
    var teamVioletNormal: UIColor { get }
    var teamVioletHover: UIColor { get }
    var teamVioletActive: UIColor { get }
    var teamSlateNormal: UIColor { get }
    var teamSlateHover: UIColor { get }
    var teamSlateActive: UIColor { get }
}
@objc public protocol MomentumThemeInvertedColorPaletteProtocol: AnyObject {
    var textPrimaryNormal: UIColor { get }
    var textPrimaryDisabled: UIColor { get }
    var textSecondaryNormal: UIColor { get }
    var textAccentNormal: UIColor { get }
    var textAccentHover: UIColor { get }
    var textAccentActive: UIColor { get }
    var backgroundNormal: UIColor { get }
    var buttonPrimaryNormal: UIColor { get }
    var buttonPrimaryHover: UIColor { get }
    var buttonPrimaryPressed: UIColor { get }
    var buttonPrimaryDisabled: UIColor { get }
    var buttonSecondaryNormal: UIColor { get }
    var buttonSecondaryHover: UIColor { get }
    var buttonSecondaryPressed: UIColor { get }
    var buttonSecondaryDisabled: UIColor { get }
    var outlineButtonNormal: UIColor { get }
    var outlinePrimaryNormal: UIColor { get }
    var outlineDisabledNormal: UIColor { get }
    var outlineThemeNormal: UIColor { get }
    var controlActiveNormal: UIColor { get }
    var controlActiveHover: UIColor { get }
    var controlActivePressed: UIColor { get }
    var controlActiveActive: UIColor { get }
    var controlActiveDisabled: UIColor { get }
    var controlInactiveNormal: UIColor { get }
    var controlInactiveHover: UIColor { get }
    var controlInactivePressed: UIColor { get }
    var controlInactiveDisabled: UIColor { get }
}
@objc public protocol MomentumThemeBackgroundColorPaletteProtocol: AnyObject {
    var primaryGhost: UIColor { get }
    var primaryHover: UIColor { get }
    var primaryActive: UIColor { get }
    var primaryDisabled: UIColor { get }
    var solidPrimaryNormal: UIColor { get }
    var solidSecondaryNormal: UIColor { get }
    var solidTertiaryNormal: UIColor { get }
    var solidQuaternaryNormal: UIColor { get }
    var secondaryNormal: UIColor { get }
    var secondaryHover: UIColor { get }
    var secondaryActive: UIColor { get }
    var secondaryDisabled: UIColor { get }
    var accentNormal: UIColor { get }
    var accentActive: UIColor { get }
    var alertDefaultNormal: UIColor { get }
    var alertDefaultHover: UIColor { get }
    var alertDefaultActive: UIColor { get }
    var alertSuccessNormal: UIColor { get }
    var alertSuccessHover: UIColor { get }
    var alertSuccessActive: UIColor { get }
    var alertWarningNormal: UIColor { get }
    var alertWarningHover: UIColor { get }
    var alertWarningActive: UIColor { get }
    var alertErrorNormal: UIColor { get }
    var alertErrorHover: UIColor { get }
    var alertErrorActive: UIColor { get }
    var alertThemeNormal: UIColor { get }
    var alertThemeHover: UIColor { get }
    var alertThemeActive: UIColor { get }
    var alertPurpleNormal: UIColor { get }
    var alertPurpleHover: UIColor { get }
    var alertPurpleActive: UIColor { get }
    var alertOrangeNormal: UIColor { get }
    var alertOrangeHover: UIColor { get }
    var alertOrangeActive: UIColor { get }
    var labelCobaltNormal: UIColor { get }
    var labelCobaltHover: UIColor { get }
    var labelCobaltActive: UIColor { get }
    var labelGoldNormal: UIColor { get }
    var labelGoldHover: UIColor { get }
    var labelGoldActive: UIColor { get }
    var labelLimeNormal: UIColor { get }
    var labelLimeHover: UIColor { get }
    var labelLimeActive: UIColor { get }
    var labelMintNormal: UIColor { get }
    var labelMintHover: UIColor { get }
    var labelMintActive: UIColor { get }
    var labelOrangeNormal: UIColor { get }
    var labelOrangeHover: UIColor { get }
    var labelOrangeActive: UIColor { get }
    var labelPinkNormal: UIColor { get }
    var labelPinkHover: UIColor { get }
    var labelPinkActive: UIColor { get }
    var labelPurpleNormal: UIColor { get }
    var labelPurpleHover: UIColor { get }
    var labelPurpleActive: UIColor { get }
    var labelSlateNormal: UIColor { get }
    var labelSlateHover: UIColor { get }
    var labelSlateActive: UIColor { get }
    var labelVioletNormal: UIColor { get }
    var labelVioletHover: UIColor { get }
    var labelVioletActive: UIColor { get }
    var labelDefaultNormal: UIColor { get }
    var labelDefaultHover: UIColor { get }
    var labelDefaultActive: UIColor { get }
    var labelErrorNormal: UIColor { get }
    var labelErrorHover: UIColor { get }
    var labelErrorActive: UIColor { get }
    var namelabelNormal: UIColor { get }
    var gradientPrimaryNormal0: UIColor { get }
    var gradientPrimaryNormal1: UIColor { get }
    var gradientSecondaryNormal0: UIColor { get }
    var gradientSecondaryNormal1: UIColor { get }
    var reactionNormal0: UIColor { get }
    var reactionNormal1: UIColor { get }
    var skeletonNormal0: UIColor { get }
    var skeletonNormal1: UIColor { get }
    var skeletonNormal2: UIColor { get }
    var skeletonNormal3: UIColor { get }
    var glassNormal: UIColor { get }
    var glassOverlayNormal: UIColor { get }
    var glassOverlayInactive: UIColor { get }
}
@objc public protocol MomentumThemeButtonColorPaletteProtocol: AnyObject {
    var primaryNormal: UIColor { get }
    var primaryHover: UIColor { get }
    var primaryPressed: UIColor { get }
    var primaryDisabled: UIColor { get }
    var secondaryNormal: UIColor { get }
    var secondaryHover: UIColor { get }
    var secondaryPressed: UIColor { get }
    var secondaryDisabled: UIColor { get }
    var secondaryActiveNormal: UIColor { get }
    var secondaryActiveHover: UIColor { get }
    var secondaryActivePressed: UIColor { get }
    var secondaryActiveDisabled: UIColor { get }
    var joinNormal: UIColor { get }
    var joinHover: UIColor { get }
    var joinPressed: UIColor { get }
    var cancelNormal: UIColor { get }
    var cancelHover: UIColor { get }
    var cancelPressed: UIColor { get }
    var accentNormal: UIColor { get }
    var accentHover: UIColor { get }
    var accentPressed: UIColor { get }
    var glassPrimaryNormal: UIColor { get }
    var glassPrimaryHover: UIColor { get }
    var glassPrimaryPressed: UIColor { get }
}
@objc public protocol MomentumThemeOutlineColorPaletteProtocol: AnyObject {
    var primaryNormal: UIColor { get }
    var primaryDisabled: UIColor { get }
    var themeNormal: UIColor { get }
    var secondaryNormal: UIColor { get }
    var inputNormal: UIColor { get }
    var inputActive: UIColor { get }
    var buttonNormal: UIColor { get }
    var joinNormal: UIColor { get }
    var cancelNormal: UIColor { get }
    var shareSelected: UIColor { get }
    var shareActive: UIColor { get }
    var shareInactive: UIColor { get }
    var overlayNormal: UIColor { get }
    var highContrastFocus: UIColor { get }
    var labelCobalt: UIColor { get }
    var labelGold: UIColor { get }
    var labelLime: UIColor { get }
    var labelMint: UIColor { get }
    var labelOrange: UIColor { get }
    var labelPink: UIColor { get }
    var labelPurple: UIColor { get }
    var labelSlate: UIColor { get }
    var labelViolet: UIColor { get }
    var promotionNormal: UIColor { get }
    var gradientActive0: UIColor { get }
    var gradientActive1: UIColor { get }
    var gradientActive2: UIColor { get }
    var warningNormal: UIColor { get }
}
@objc public protocol MomentumThemeControlColorPaletteProtocol: AnyObject {
    var activeNormal: UIColor { get }
    var activeHover: UIColor { get }
    var activePressed: UIColor { get }
    var activeActive: UIColor { get }
    var activeDisabled: UIColor { get }
    var indicatorInactiveNormal: UIColor { get }
    var inactiveNormal: UIColor { get }
    var inactiveHover: UIColor { get }
    var inactivePressed: UIColor { get }
    var inactiveDisabled: UIColor { get }
}
@objc public protocol MomentumThemeOverlayColorPaletteProtocol: AnyObject {
    var meetingsNormal: UIColor { get }
    var buttonSecondaryNormal: UIColor { get }
    var buttonSecondaryHover: UIColor { get }
    var buttonSecondaryPressed: UIColor { get }
}
@objc public protocol MomentumThemeIndicatorColorPaletteProtocol: AnyObject {
    var unstable: UIColor { get }
    var attention: UIColor { get }
    var stable: UIColor { get }
    var locked: UIColor { get }
    var caution: UIColor { get }
    var secure: UIColor { get }
}
@objc public protocol MomentumThemeCommonColorPaletteProtocol: AnyObject {
    var whiteboardStickyNoteYellow: UIColor { get }
    var whiteboardStickyNoteRed: UIColor { get }
    var whiteboardStickyNotePurple: UIColor { get }
    var whiteboardStickyNoteCyan: UIColor { get }
    var whiteboardStickyNoteMint: UIColor { get }
    var whiteboardPenBlack: UIColor { get }
    var whiteboardPenRed: UIColor { get }
    var whiteboardPenPurple: UIColor { get }
    var whiteboardPenBlue: UIColor { get }
    var whiteboardPenGreen: UIColor { get }
    var whiteboardPenYellow: UIColor { get }
    var whiteboardPenWhite: UIColor { get }
    var textPrimaryNormal: UIColor { get }
    var textPrimaryDisabled: UIColor { get }
    var textSecondaryNormal: UIColor { get }
    var textSuccessNormal: UIColor { get }
    var textSuccessHover: UIColor { get }
    var textErrorNormal: UIColor { get }
    var textErrorHover: UIColor { get }
    var textWarningNormal: UIColor { get }
    var textWarningHover: UIColor { get }
    var invertedTextPrimaryNormal: UIColor { get }
    var invertedTextSecondaryNormal: UIColor { get }
    var invertedButtonSecondaryNormal: UIColor { get }
    var invertedButtonSecondaryHover: UIColor { get }
    var invertedButtonSecondaryPressed: UIColor { get }
    var invertedButtonSecondaryDisabled: UIColor { get }
    var overlaysPrimaryNormal: UIColor { get }
    var overlaysSecondaryNormal: UIColor { get }
    var overlaysMeetingNormal0: UIColor { get }
    var overlaysMeetingNormal1: UIColor { get }
    var overlaysMeetingNormal2: UIColor { get }
    var buttonPrimaryNormal: UIColor { get }
    var buttonPrimaryHover: UIColor { get }
    var buttonPrimaryPressed: UIColor { get }
    var buttonPrimaryDisabled: UIColor { get }
    var buttonSecondaryNormal: UIColor { get }
    var buttonSecondaryHover: UIColor { get }
    var buttonSecondaryActiveNormal: UIColor { get }
    var buttonSecondaryActiveHover: UIColor { get }
    var buttonSecondaryActivePressed: UIColor { get }
    var buttonSecondaryActiveDisabled: UIColor { get }
    var buttonSecondaryDisabled: UIColor { get }
    var buttonPromotionNormal0: UIColor { get }
    var buttonPromotionNormal1: UIColor { get }
    var buttonPromotionHover0: UIColor { get }
    var buttonPromotionHover1: UIColor { get }
    var buttonPromotionActive0: UIColor { get }
    var buttonPromotionActive1: UIColor { get }
    var buttonJoinAnimatedGradientNormal0: UIColor { get }
    var buttonJoinAnimatedGradientNormal1: UIColor { get }
    var buttonJoinAnimatedGradientNormal2: UIColor { get }
    var outlineButtonNormal: UIColor { get }
    var outlinePrimaryNormal: UIColor { get }
    var outlinePrimaryDisabled: UIColor { get }
    var outlineInputNormal: UIColor { get }
    var outlineSecondaryNormal: UIColor { get }
    var outlineSecondaryDisabled: UIColor { get }
    var outlineWarningNormal: UIColor { get }
    var controlShareContentSelected: UIColor { get }
    var controlShareContentActive: UIColor { get }
    var controlShareContentInactive: UIColor { get }
    var controlInactiveNormal: UIColor { get }
    var backgroundAlertShareNormal: UIColor { get }
    var backgroundSolidDark: UIColor { get }
    var backgroundSolidLight: UIColor { get }
    var contentPdf: UIColor { get }
    var contentWord: UIColor { get }
    var contentPowerpoint: UIColor { get }
    var contentExcel: UIColor { get }
    var contentOnenote: UIColor { get }
    var contentSheets: UIColor { get }
    var contentSlides: UIColor { get }
    var contentKeynote: UIColor { get }
    var contentDoc: UIColor { get }
    var touchbarBackgroundBlueNormal: UIColor { get }
    var touchbarBackgroundBluePressed: UIColor { get }
    var touchbarBackgroundPinkNormal: UIColor { get }
    var touchbarBackgroundPinkPressed: UIColor { get }
    var touchbarBackgroundMintNormal: UIColor { get }
    var touchbarBackgroundMintPressed: UIColor { get }
    var touchbarBackgroundPurpleNormal: UIColor { get }
    var touchbarBackgroundPurplePressed: UIColor { get }
    var touchbarBackgroundVioletNormal: UIColor { get }
    var touchbarBackgroundVioletPressed: UIColor { get }
    var touchbarBackgroundOrangeNormal: UIColor { get }
    var touchbarBackgroundOrangePressed: UIColor { get }
    var touchbarBackgroundGreenNormal: UIColor { get }
    var touchbarBackgroundGreenPressed: UIColor { get }
    var touchbarBackgroundRedNormal: UIColor { get }
    var touchbarBackgroundRedPressed: UIColor { get }
    var touchbarBackgroundTransparent: UIColor { get }
    var touchbarIconAttention: UIColor { get }
    var touchbarIconStable: UIColor { get }
    var touchbarIconSecure: UIColor { get }
}
@objc public protocol MomentumThemeScrollbarColorPaletteProtocol: AnyObject {
    var buttonNormal: UIColor { get }
    var buttonHover: UIColor { get }
    var buttonPressed: UIColor { get }
    var arrowNormal: UIColor { get }
    var arrowBackgroundNormal: UIColor { get }
    var arrowBackgroundHover: UIColor { get }
    var arrowBackgroundPressed: UIColor { get }
    var backgroundSecondaryGhost: UIColor { get }
    var backgroundSecondaryNormal: UIColor { get }
}
@objc public protocol MomentumThemeIllustrationsColorPaletteProtocol: AnyObject {
    var emptyPrimary0: UIColor { get }
    var emptyPrimary1: UIColor { get }
    var emptySecondary0: UIColor { get }
    var emptySecondary1: UIColor { get }
    var onboardingPrimary0: UIColor { get }
    var onboardingPrimary1: UIColor { get }
    var onboardingSecondary0: UIColor { get }
    var onboardingSecondary1: UIColor { get }
    var onboardingTertiary0: UIColor { get }
    var onboardingTertiary1: UIColor { get }
    var onboardingQuartenary0: UIColor { get }
    var onboardingQuartenary1: UIColor { get }
    var onboardingQuinary0: UIColor { get }
    var onboardingQuinary1: UIColor { get }
    var success0: UIColor { get }
    var success1: UIColor { get }
    var error0: UIColor { get }
    var error1: UIColor { get }
    var defaultColor: UIColor { get }
}
@objc public protocol MomentumThemeGlobalTintColorPaletteProtocol: AnyObject {
    var normal: UIColor { get }
    var selected: UIColor { get }
}
@objc public protocol MomentumThemeGroupedBackgroundColorPaletteProtocol: AnyObject {
    var primaryNormal: UIColor { get }
    var secondaryNormal: UIColor { get }
    var tertiaryNormal: UIColor { get }
    var quaternaryNormal: UIColor { get }
}
@objc public protocol MomentumThemeAvatarColorPaletteProtocol: AnyObject {
    var defaultColor: UIColor { get }
    var cobalt: UIColor { get }
    var cyan: UIColor { get }
    var gold: UIColor { get }
    var lime: UIColor { get }
    var mint: UIColor { get }
    var orange: UIColor { get }
    var pink: UIColor { get }
    var purple: UIColor { get }
    var slate: UIColor { get }
    var violet: UIColor { get }
    var yellow: UIColor { get }
    var hover: UIColor { get }
    var pressed: UIColor { get }
    var glassNormal: UIColor { get }
    var glassActive: UIColor { get }
}
@objc public protocol MomentumThemeGradientDividerColorPaletteProtocol: AnyObject {
    var defaultNormal0: UIColor { get }
    var defaultNormal1: UIColor { get }
    var defaultNormal2: UIColor { get }
    var defaultNormal3: UIColor { get }
    var defaultHover0: UIColor { get }
    var defaultHover1: UIColor { get }
    var defaultHover2: UIColor { get }
    var defaultHover3: UIColor { get }
    var errorNormal0: UIColor { get }
    var errorNormal1: UIColor { get }
    var errorNormal2: UIColor { get }
    var errorNormal3: UIColor { get }
    var errorHover0: UIColor { get }
    var errorHover1: UIColor { get }
    var errorHover2: UIColor { get }
    var errorHover3: UIColor { get }
    var warningNormal0: UIColor { get }
    var warningNormal1: UIColor { get }
    var warningNormal2: UIColor { get }
    var warningNormal3: UIColor { get }
    var warningHover0: UIColor { get }
    var warningHover1: UIColor { get }
    var warningHover2: UIColor { get }
    var warningHover3: UIColor { get }
    var announceNormal0: UIColor { get }
    var announceNormal1: UIColor { get }
    var announceNormal2: UIColor { get }
    var announceNormal3: UIColor { get }
    var announceHover0: UIColor { get }
    var announceHover1: UIColor { get }
    var announceHover2: UIColor { get }
    var announceHover3: UIColor { get }
    var successNormal0: UIColor { get }
    var successNormal1: UIColor { get }
    var successNormal2: UIColor { get }
    var successNormal3: UIColor { get }
    var successHover0: UIColor { get }
    var successHover1: UIColor { get }
    var successHover2: UIColor { get }
    var successHover3: UIColor { get }
    var orangeNormal0: UIColor { get }
    var orangeNormal1: UIColor { get }
    var orangeNormal2: UIColor { get }
    var orangeNormal3: UIColor { get }
    var orangeHover0: UIColor { get }
    var orangeHover1: UIColor { get }
    var orangeHover2: UIColor { get }
    var orangeHover3: UIColor { get }
    var purpleNormal0: UIColor { get }
    var purpleNormal1: UIColor { get }
    var purpleNormal2: UIColor { get }
    var purpleNormal3: UIColor { get }
    var purpleHover0: UIColor { get }
    var purpleHover1: UIColor { get }
    var purpleHover2: UIColor { get }
    var purpleHover3: UIColor { get }
    var verticalNormal0: UIColor { get }
    var verticalNormal1: UIColor { get }
    var verticalNormal2: UIColor { get }
    var verticalNormal3: UIColor { get }
    var verticalHover0: UIColor { get }
    var verticalHover1: UIColor { get }
    var verticalHover2: UIColor { get }
    var verticalHover3: UIColor { get }
}
@objc public protocol MomentumThemeFocusColorPaletteProtocol: AnyObject {
    var default0: UIColor { get }
    var default1: UIColor { get }
    var default2: UIColor { get }
}
@objc public protocol MomentumThemeTokensProtocol: AnyObject {
    var text: any MomentumThemeTextColorPaletteProtocol { get }
    var inverted: any MomentumThemeInvertedColorPaletteProtocol { get }
    var background: any MomentumThemeBackgroundColorPaletteProtocol { get }
    var button: any MomentumThemeButtonColorPaletteProtocol { get }
    var outline: any MomentumThemeOutlineColorPaletteProtocol { get }
    var control: any MomentumThemeControlColorPaletteProtocol { get }
    var overlay: any MomentumThemeOverlayColorPaletteProtocol { get }
    var indicator: any MomentumThemeIndicatorColorPaletteProtocol { get }
    var common: any MomentumThemeCommonColorPaletteProtocol { get }
    var scrollbar: any MomentumThemeScrollbarColorPaletteProtocol { get }
    var illustrations: any MomentumThemeIllustrationsColorPaletteProtocol { get }
    var globalTint: any MomentumThemeGlobalTintColorPaletteProtocol { get }
    var groupedBackground: any MomentumThemeGroupedBackgroundColorPaletteProtocol { get }
    var avatar: any MomentumThemeAvatarColorPaletteProtocol { get }
    var gradientDivider: any MomentumThemeGradientDividerColorPaletteProtocol { get }
    var focus: any MomentumThemeFocusColorPaletteProtocol { get }
}
open class LightMomentumThemeTextColorPalette: MomentumThemeTextColorPaletteProtocol {
    open var primaryNormal: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.95) }
    open var primaryDisabled: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.40) }
    open var secondaryNormal: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.70) }
    open var errorNormal: UIColor { return UIColor(hex: 0xAB0A15) }
    open var errorHover: UIColor { return UIColor(hex: 0x4F0E10) }
    open var errorActive: UIColor { return UIColor(hex: 0x4F0E10) }
    open var successNormal: UIColor { return UIColor(hex: 0x185E46) }
    open var successHover: UIColor { return UIColor(hex: 0x0E2B20) }
    open var successActive: UIColor { return UIColor(hex: 0x0E2B20) }
    open var warningNormal: UIColor { return UIColor(hex: 0x7D4705) }
    open var warningHover: UIColor { return UIColor(hex: 0x36220C) }
    open var warningActive: UIColor { return UIColor(hex: 0x36220C) }
    open var highlight: UIColor { return UIColor(hex: 0xBFE3FF) }
    open var accentNormal: UIColor { return UIColor(hex: 0x0353A8) }
    open var accentHover: UIColor { return UIColor(hex: 0x0A274A) }
    open var accentActive: UIColor { return UIColor(hex: 0x0A274A) }
    open var teamdefaultNormal: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.70) }
    open var teamdefaultHover: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.70) }
    open var teamdefaultActive: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.95) }
    open var alertPurpleNormal: UIColor { return UIColor(hex: 0x932099) }
    open var alertPurpleHover: UIColor { return UIColor(hex: 0x3B1840) }
    open var alertPurpleActive: UIColor { return UIColor(hex: 0x3B1840) }
    open var alertOrangeNormal: UIColor { return UIColor(hex: 0x9C3202) }
    open var alertOrangeHover: UIColor { return UIColor(hex: 0x411B04) }
    open var alertOrangeActive: UIColor { return UIColor(hex: 0x411B04) }
    open var teamCobaltNormal: UIColor { return UIColor(hex: 0x08599C) }
    open var teamCobaltHover: UIColor { return UIColor(hex: 0x08599C) }
    open var teamCobaltActive: UIColor { return UIColor(hex: 0x12283D) }
    open var teamCyanNormal: UIColor { return UIColor(hex: 0x066070) }
    open var teamCyanHover: UIColor { return UIColor(hex: 0x0B2A30) }
    open var teamCyanActive: UIColor { return UIColor(hex: 0x0B2A30) }
    open var teamMintNormal: UIColor { return UIColor(hex: 0x12615A) }
    open var teamMintHover: UIColor { return UIColor(hex: 0x102B2A) }
    open var teamMintActive: UIColor { return UIColor(hex: 0x102B2A) }
    open var teamLimeNormal: UIColor { return UIColor(hex: 0x416116) }
    open var teamLimeHover: UIColor { return UIColor(hex: 0x416116) }
    open var teamLimeActive: UIColor { return UIColor(hex: 0x1E2B10) }
    open var teamGoldNormal: UIColor { return UIColor(hex: 0x735107) }
    open var teamGoldHover: UIColor { return UIColor(hex: 0x735107) }
    open var teamGoldActive: UIColor { return UIColor(hex: 0x30240D) }
    open var teamOrangeNormal: UIColor { return UIColor(hex: 0x9C3202) }
    open var teamOrangeHover: UIColor { return UIColor(hex: 0x9C3202) }
    open var teamOrangeActive: UIColor { return UIColor(hex: 0x411B04) }
    open var teamPinkNormal: UIColor { return UIColor(hex: 0xA12A3A) }
    open var teamPinkHover: UIColor { return UIColor(hex: 0xA12A3A) }
    open var teamPinkActive: UIColor { return UIColor(hex: 0x3B1E21) }
    open var teamPurpleNormal: UIColor { return UIColor(hex: 0x932099) }
    open var teamPurpleHover: UIColor { return UIColor(hex: 0x932099) }
    open var teamPurpleActive: UIColor { return UIColor(hex: 0x3B1840) }
    open var teamVioletNormal: UIColor { return UIColor(hex: 0x643ABD) }
    open var teamVioletHover: UIColor { return UIColor(hex: 0x643ABD) }
    open var teamVioletActive: UIColor { return UIColor(hex: 0x29223D) }
    open var teamSlateNormal: UIColor { return UIColor(hex: 0x535573) }
    open var teamSlateHover: UIColor { return UIColor(hex: 0x535573) }
    open var teamSlateActive: UIColor { return UIColor(hex: 0x26262B) }
    public init() {}
}
open class LightMomentumThemeInvertedColorPalette: MomentumThemeInvertedColorPaletteProtocol {
    open var textPrimaryNormal: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.95) }
    open var textPrimaryDisabled: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.40) }
    open var textSecondaryNormal: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.70) }
    open var textAccentNormal: UIColor { return UIColor(hex: 0x64B4FA) }
    open var textAccentHover: UIColor { return UIColor(hex: 0xBFE3FF) }
    open var textAccentActive: UIColor { return UIColor(hex: 0xBFE3FF) }
    open var backgroundNormal: UIColor { return UIColor(hex: 0x000000) }
    open var buttonPrimaryNormal: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.95) }
    open var buttonPrimaryHover: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.80) }
    open var buttonPrimaryPressed: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.70) }
    open var buttonPrimaryDisabled: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.20) }
    open var buttonSecondaryNormal: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.00) }
    open var buttonSecondaryHover: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.07) }
    open var buttonSecondaryPressed: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.20) }
    open var buttonSecondaryDisabled: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.00) }
    open var outlineButtonNormal: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.50) }
    open var outlinePrimaryNormal: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.40) }
    open var outlineDisabledNormal: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.20) }
    open var outlineThemeNormal: UIColor { return UIColor(hex: 0x64B4FA) }
    open var controlActiveNormal: UIColor { return UIColor(hex: 0x64B4FA) }
    open var controlActiveHover: UIColor { return UIColor(hex: 0x3492EB) }
    open var controlActivePressed: UIColor { return UIColor(hex: 0x1170CF) }
    open var controlActiveActive: UIColor { return UIColor(hex: 0x1170CF) }
    open var controlActiveDisabled: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.20) }
    open var controlInactiveNormal: UIColor { return UIColor(hex: 0x8F8F8F) }
    open var controlInactiveHover: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.30) }
    open var controlInactivePressed: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.40) }
    open var controlInactiveDisabled: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.20) }
    public init() {}
}
open class LightMomentumThemeBackgroundColorPalette: MomentumThemeBackgroundColorPaletteProtocol {
    open var primaryGhost: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.00) }
    open var primaryHover: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.07) }
    open var primaryActive: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.11) }
    open var primaryDisabled: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.00) }
    open var solidPrimaryNormal: UIColor { return UIColor(hex: 0xFFFFFF) }
    open var solidSecondaryNormal: UIColor { return UIColor(hex: 0xF7F7F7) }
    open var solidTertiaryNormal: UIColor { return UIColor(hex: 0xEDEDED) }
    open var solidQuaternaryNormal: UIColor { return UIColor(hex: 0xFFFFFF) }
    open var secondaryNormal: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.11) }
    open var secondaryHover: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.20) }
    open var secondaryActive: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.30) }
    open var secondaryDisabled: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.00) }
    open var accentNormal: UIColor { return UIColor(hex: 0x1170CF) }
    open var accentActive: UIColor { return UIColor(hex: 0x0353A8) }
    open var alertDefaultNormal: UIColor { return UIColor(hex: 0xDEDEDE) }
    open var alertDefaultHover: UIColor { return UIColor(hex: 0xDEDEDE) }
    open var alertDefaultActive: UIColor { return UIColor(hex: 0xC9C9C9) }
    open var alertSuccessNormal: UIColor { return UIColor(hex: 0xCEF5EB) }
    open var alertSuccessHover: UIColor { return UIColor(hex: 0xCEF5EB) }
    open var alertSuccessActive: UIColor { return UIColor(hex: 0x9FEDD8) }
    open var alertWarningNormal: UIColor { return UIColor(hex: 0xFFEBC2) }
    open var alertWarningHover: UIColor { return UIColor(hex: 0xFFEBC2) }
    open var alertWarningActive: UIColor { return UIColor(hex: 0xFFDA94) }
    open var alertErrorNormal: UIColor { return UIColor(hex: 0xFFE8EA) }
    open var alertErrorHover: UIColor { return UIColor(hex: 0xFFE8EA) }
    open var alertErrorActive: UIColor { return UIColor(hex: 0xFFD4DA) }
    open var alertThemeNormal: UIColor { return UIColor(hex: 0xDBF0FF) }
    open var alertThemeHover: UIColor { return UIColor(hex: 0xDBF0FF) }
    open var alertThemeActive: UIColor { return UIColor(hex: 0xBFE3FF) }
    open var alertPurpleNormal: UIColor { return UIColor(hex: 0xFCF2FC) }
    open var alertPurpleHover: UIColor { return UIColor(hex: 0xFCF2FC) }
    open var alertPurpleActive: UIColor { return UIColor(hex: 0xFCE1FC) }
    open var alertOrangeNormal: UIColor { return UIColor(hex: 0xFEEBD7) }
    open var alertOrangeHover: UIColor { return UIColor(hex: 0xFEEBD7) }
    open var alertOrangeActive: UIColor { return UIColor(hex: 0xFED5AC) }
    open var labelCobaltNormal: UIColor { return UIColor(hex: 0xE5F8FF) }
    open var labelCobaltHover: UIColor { return UIColor(hex: 0xC7EEFF) }
    open var labelCobaltActive: UIColor { return UIColor(hex: 0x99DDFF) }
    open var labelGoldNormal: UIColor { return UIColor(hex: 0xF7F6DC) }
    open var labelGoldHover: UIColor { return UIColor(hex: 0xF5EAA2) }
    open var labelGoldActive: UIColor { return UIColor(hex: 0xEBD460) }
    open var labelLimeNormal: UIColor { return UIColor(hex: 0xF3F7E9) }
    open var labelLimeHover: UIColor { return UIColor(hex: 0xDDF2AE) }
    open var labelLimeActive: UIColor { return UIColor(hex: 0xBCE36F) }
    open var labelMintNormal: UIColor { return UIColor(hex: 0xE9F7F3) }
    open var labelMintHover: UIColor { return UIColor(hex: 0xBAF5E7) }
    open var labelMintActive: UIColor { return UIColor(hex: 0x74E8D1) }
    open var labelOrangeNormal: UIColor { return UIColor(hex: 0xFEEBD7) }
    open var labelOrangeHover: UIColor { return UIColor(hex: 0xFED5AC) }
    open var labelOrangeActive: UIColor { return UIColor(hex: 0xFEBA7F) }
    open var labelPinkNormal: UIColor { return UIColor(hex: 0xFFF2F5) }
    open var labelPinkHover: UIColor { return UIColor(hex: 0xFFE0E7) }
    open var labelPinkActive: UIColor { return UIColor(hex: 0xFFC7D2) }
    open var labelPurpleNormal: UIColor { return UIColor(hex: 0xFCF2FC) }
    open var labelPurpleHover: UIColor { return UIColor(hex: 0xFCE1FC) }
    open var labelPurpleActive: UIColor { return UIColor(hex: 0xFAC3F8) }
    open var labelSlateNormal: UIColor { return UIColor(hex: 0xF2F4FF) }
    open var labelSlateHover: UIColor { return UIColor(hex: 0xE3E7FA) }
    open var labelSlateActive: UIColor { return UIColor(hex: 0xCED2ED) }
    open var labelVioletNormal: UIColor { return UIColor(hex: 0xF8F2FC) }
    open var labelVioletHover: UIColor { return UIColor(hex: 0xF0E3FC) }
    open var labelVioletActive: UIColor { return UIColor(hex: 0xE2CAFC) }
    open var labelDefaultNormal: UIColor { return UIColor(hex: 0xEDEDED) }
    open var labelDefaultHover: UIColor { return UIColor(hex: 0xDEDEDE) }
    open var labelDefaultActive: UIColor { return UIColor(hex: 0xC9C9C9) }
    open var labelErrorNormal: UIColor { return UIColor(hex: 0xFFE8EA) }
    open var labelErrorHover: UIColor { return UIColor(hex: 0xFFD4DA) }
    open var labelErrorActive: UIColor { return UIColor(hex: 0xFFB8C1) }
    open var namelabelNormal: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.60) }
    open var gradientPrimaryNormal0: UIColor { return UIColor(hex: 0xF0F0F0) }
    open var gradientPrimaryNormal1: UIColor { return UIColor(hex: 0xFFFFFF) }
    open var gradientSecondaryNormal0: UIColor { return UIColor(hex: 0xFAFAFA) }
    open var gradientSecondaryNormal1: UIColor { return UIColor(hex: 0xFFFFFF) }
    open var reactionNormal0: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.90) }
    open var reactionNormal1: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.00) }
    open var skeletonNormal0: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.20) }
    open var skeletonNormal1: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.30) }
    open var skeletonNormal2: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.40) }
    open var skeletonNormal3: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.50) }
    open var glassNormal: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.60) }
    open var glassOverlayNormal: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.80) }
    open var glassOverlayInactive: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.40) }
    public init() {}
}
open class LightMomentumThemeButtonColorPalette: MomentumThemeButtonColorPaletteProtocol {
    open var primaryNormal: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.95) }
    open var primaryHover: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.80) }
    open var primaryPressed: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.70) }
    open var primaryDisabled: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.20) }
    open var secondaryNormal: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.00) }
    open var secondaryHover: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.07) }
    open var secondaryPressed: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.20) }
    open var secondaryDisabled: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.00) }
    open var secondaryActiveNormal: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.20) }
    open var secondaryActiveHover: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.30) }
    open var secondaryActivePressed: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.40) }
    open var secondaryActiveDisabled: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.11) }
    open var joinNormal: UIColor { return UIColor(hex: 0x1D805F) }
    open var joinHover: UIColor { return UIColor(hex: 0x185E46) }
    open var joinPressed: UIColor { return UIColor(hex: 0x134231) }
    open var cancelNormal: UIColor { return UIColor(hex: 0xDB1F2E) }
    open var cancelHover: UIColor { return UIColor(hex: 0xAB0A15) }
    open var cancelPressed: UIColor { return UIColor(hex: 0x780D13) }
    open var accentNormal: UIColor { return UIColor(hex: 0x1170CF) }
    open var accentHover: UIColor { return UIColor(hex: 0x0353A8) }
    open var accentPressed: UIColor { return UIColor(hex: 0x063A75) }
    open var glassPrimaryNormal: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.80) }
    open var glassPrimaryHover: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.70) }
    open var glassPrimaryPressed: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.60) }
    public init() {}
}
open class LightMomentumThemeOutlineColorPalette: MomentumThemeOutlineColorPaletteProtocol {
    open var primaryNormal: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.46) }
    open var primaryDisabled: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.20) }
    open var themeNormal: UIColor { return UIColor(hex: 0x1170CF) }
    open var secondaryNormal: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.20) }
    open var inputNormal: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.50) }
    open var inputActive: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.90) }
    open var buttonNormal: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.50) }
    open var joinNormal: UIColor { return UIColor(hex: 0x185E46) }
    open var cancelNormal: UIColor { return UIColor(hex: 0xAB0A15) }
    open var shareSelected: UIColor { return UIColor(hex: 0x27A17A) }
    open var shareActive: UIColor { return UIColor(hex: 0xEC6400) }
    open var shareInactive: UIColor { return UIColor(hex: 0x8F8F8F) }
    open var overlayNormal: UIColor { return UIColor(hex: 0x707070) }
    open var highContrastFocus: UIColor { return UIColor(hex: 0x000000) }
    open var labelCobalt: UIColor { return UIColor(hex: 0x5EBFF7) }
    open var labelGold: UIColor { return UIColor(hex: 0xD6B220) }
    open var labelLime: UIColor { return UIColor(hex: 0x93C437) }
    open var labelMint: UIColor { return UIColor(hex: 0x30C9B0) }
    open var labelOrange: UIColor { return UIColor(hex: 0xFD884E) }
    open var labelPink: UIColor { return UIColor(hex: 0xFC97AA) }
    open var labelPurple: UIColor { return UIColor(hex: 0xF294F1) }
    open var labelSlate: UIColor { return UIColor(hex: 0xB0B4D9) }
    open var labelViolet: UIColor { return UIColor(hex: 0xC7A5FA) }
    open var promotionNormal: UIColor { return UIColor(hex: 0xC233C4) }
    open var gradientActive0: UIColor { return UIColor(hex: 0x3492EB) }
    open var gradientActive1: UIColor { return UIColor(hex: 0x00A3B5) }
    open var gradientActive2: UIColor { return UIColor(hex: 0x3CC29A) }
    open var warningNormal: UIColor { return UIColor(hex: 0x7D4705) }
    public init() {}
}
open class LightMomentumThemeControlColorPalette: MomentumThemeControlColorPaletteProtocol {
    open var activeNormal: UIColor { return UIColor(hex: 0x1170CF) }
    open var activeHover: UIColor { return UIColor(hex: 0x0353A8) }
    open var activePressed: UIColor { return UIColor(hex: 0x063A75) }
    open var activeActive: UIColor { return UIColor(hex: 0x063A75) }
    open var activeDisabled: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.20) }
    open var indicatorInactiveNormal: UIColor { return UIColor(hex: 0x707070) }
    open var inactiveNormal: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.11) }
    open var inactiveHover: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.20) }
    open var inactivePressed: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.30) }
    open var inactiveDisabled: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.07) }
    public init() {}
}
open class LightMomentumThemeOverlayColorPalette: MomentumThemeOverlayColorPaletteProtocol {
    open var meetingsNormal: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.80) }
    open var buttonSecondaryNormal: UIColor { return UIColor(hex: 0xFFFFFF) }
    open var buttonSecondaryHover: UIColor { return UIColor(hex: 0xEDEDED) }
    open var buttonSecondaryPressed: UIColor { return UIColor(hex: 0xDEDEDE) }
    public init() {}
}
open class LightMomentumThemeIndicatorColorPalette: MomentumThemeIndicatorColorPaletteProtocol {
    open var unstable: UIColor { return UIColor(hex: 0xC94403) }
    open var attention: UIColor { return UIColor(hex: 0xDB1F2E) }
    open var stable: UIColor { return UIColor(hex: 0x1D805F) }
    open var locked: UIColor { return UIColor(hex: 0x707070) }
    open var caution: UIColor { return UIColor(hex: 0xA65E00) }
    open var secure: UIColor { return UIColor(hex: 0x1170CF) }
    public init() {}
}
open class LightMomentumThemeCommonColorPalette: MomentumThemeCommonColorPaletteProtocol {
    open var whiteboardStickyNoteYellow: UIColor { return UIColor(hex: 0xFFBE4F) }
    open var whiteboardStickyNoteRed: UIColor { return UIColor(hex: 0xFC8B98) }
    open var whiteboardStickyNotePurple: UIColor { return UIColor(hex: 0xF294F1) }
    open var whiteboardStickyNoteCyan: UIColor { return UIColor(hex: 0x22C7D6) }
    open var whiteboardStickyNoteMint: UIColor { return UIColor(hex: 0x30C9B0) }
    open var whiteboardPenBlack: UIColor { return UIColor(hex: 0x0F0F0F) }
    open var whiteboardPenRed: UIColor { return UIColor(hex: 0xF55868) }
    open var whiteboardPenPurple: UIColor { return UIColor(hex: 0xC233C4) }
    open var whiteboardPenBlue: UIColor { return UIColor(hex: 0x64B4FA) }
    open var whiteboardPenGreen: UIColor { return UIColor(hex: 0x3CC29A) }
    open var whiteboardPenYellow: UIColor { return UIColor(hex: 0xF2990A) }
    open var whiteboardPenWhite: UIColor { return UIColor(hex: 0xFFFFFF) }
    open var textPrimaryNormal: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.95) }
    open var textPrimaryDisabled: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.40) }
    open var textSecondaryNormal: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.70) }
    open var textSuccessNormal: UIColor { return UIColor(hex: 0x3CC29A) }
    open var textSuccessHover: UIColor { return UIColor(hex: 0x9FEDD8) }
    open var textErrorNormal: UIColor { return UIColor(hex: 0xFC8B98) }
    open var textErrorHover: UIColor { return UIColor(hex: 0xFFD4DA) }
    open var textWarningNormal: UIColor { return UIColor(hex: 0xF2990A) }
    open var textWarningHover: UIColor { return UIColor(hex: 0xFFDA94) }
    open var invertedTextPrimaryNormal: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.95) }
    open var invertedTextSecondaryNormal: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.60) }
    open var invertedButtonSecondaryNormal: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.00) }
    open var invertedButtonSecondaryHover: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.07) }
    open var invertedButtonSecondaryPressed: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.20) }
    open var invertedButtonSecondaryDisabled: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.00) }
    open var overlaysPrimaryNormal: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.90) }
    open var overlaysSecondaryNormal: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.40) }
    open var overlaysMeetingNormal0: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.00) }
    open var overlaysMeetingNormal1: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.30) }
    open var overlaysMeetingNormal2: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.80) }
    open var buttonPrimaryNormal: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.95) }
    open var buttonPrimaryHover: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.80) }
    open var buttonPrimaryPressed: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.70) }
    open var buttonPrimaryDisabled: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.20) }
    open var buttonSecondaryNormal: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.00) }
    open var buttonSecondaryHover: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.07) }
    open var buttonSecondaryActiveNormal: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.20) }
    open var buttonSecondaryActiveHover: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.30) }
    open var buttonSecondaryActivePressed: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.40) }
    open var buttonSecondaryActiveDisabled: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.11) }
    open var buttonSecondaryDisabled: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.00) }
    open var buttonPromotionNormal0: UIColor { return UIColor(hex: 0x932099) }
    open var buttonPromotionNormal1: UIColor { return UIColor(hex: 0xA12A3A) }
    open var buttonPromotionHover0: UIColor { return UIColor(hex: 0x601E66) }
    open var buttonPromotionHover1: UIColor { return UIColor(hex: 0x66262D) }
    open var buttonPromotionActive0: UIColor { return UIColor(hex: 0x3B1840) }
    open var buttonPromotionActive1: UIColor { return UIColor(hex: 0x3B1E21) }
    open var buttonJoinAnimatedGradientNormal0: UIColor { return UIColor(hex: 0x30C9B0) }
    open var buttonJoinAnimatedGradientNormal1: UIColor { return UIColor(hex: 0x64B4FA) }
    open var buttonJoinAnimatedGradientNormal2: UIColor { return UIColor(hex: 0x30C9B0) }
    open var outlineButtonNormal: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.30) }
    open var outlinePrimaryNormal: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.40) }
    open var outlinePrimaryDisabled: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.20) }
    open var outlineInputNormal: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.50) }
    open var outlineSecondaryNormal: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.20) }
    open var outlineSecondaryDisabled: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.20) }
    open var outlineWarningNormal: UIColor { return UIColor(hex: 0xF2990A) }
    open var controlShareContentSelected: UIColor { return UIColor(hex: 0x3CC29A) }
    open var controlShareContentActive: UIColor { return UIColor(hex: 0xC94403) }
    open var controlShareContentInactive: UIColor { return UIColor(hex: 0x707070) }
    open var controlInactiveNormal: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.20) }
    open var backgroundAlertShareNormal: UIColor { return UIColor(hex: 0xC94403) }
    open var backgroundSolidDark: UIColor { return UIColor(hex: 0x1A1A1A) }
    open var backgroundSolidLight: UIColor { return UIColor(hex: 0xFFFFFF) }
    open var contentPdf: UIColor { return UIColor(hex: 0xEE0507) }
    open var contentWord: UIColor { return UIColor(hex: 0x0078D6) }
    open var contentPowerpoint: UIColor { return UIColor(hex: 0xD93E17) }
    open var contentExcel: UIColor { return UIColor(hex: 0x00893E) }
    open var contentOnenote: UIColor { return UIColor(hex: 0xB839DB) }
    open var contentSheets: UIColor { return UIColor(hex: 0xF4B400) }
    open var contentSlides: UIColor { return UIColor(hex: 0x0F9D58) }
    open var contentKeynote: UIColor { return UIColor(hex: 0x029CFB) }
    open var contentDoc: UIColor { return UIColor(hex: 0x4285F4) }
    open var touchbarBackgroundBlueNormal: UIColor { return UIColor(hex: 0x1170CF) }
    open var touchbarBackgroundBluePressed: UIColor { return UIColor(hex: 0x063A75) }
    open var touchbarBackgroundPinkNormal: UIColor { return UIColor(hex: 0xD43B52) }
    open var touchbarBackgroundPinkPressed: UIColor { return UIColor(hex: 0x66262D) }
    open var touchbarBackgroundMintNormal: UIColor { return UIColor(hex: 0x148579) }
    open var touchbarBackgroundMintPressed: UIColor { return UIColor(hex: 0x12423F) }
    open var touchbarBackgroundPurpleNormal: UIColor { return UIColor(hex: 0xC233C4) }
    open var touchbarBackgroundPurplePressed: UIColor { return UIColor(hex: 0x601E66) }
    open var touchbarBackgroundVioletNormal: UIColor { return UIColor(hex: 0x875AE0) }
    open var touchbarBackgroundVioletPressed: UIColor { return UIColor(hex: 0x432C78) }
    open var touchbarBackgroundOrangeNormal: UIColor { return UIColor(hex: 0xC94403) }
    open var touchbarBackgroundOrangePressed: UIColor { return UIColor(hex: 0x682601) }
    open var touchbarBackgroundGreenNormal: UIColor { return UIColor(hex: 0x1D805F) }
    open var touchbarBackgroundGreenPressed: UIColor { return UIColor(hex: 0x134231) }
    open var touchbarBackgroundRedNormal: UIColor { return UIColor(hex: 0xDB1F2E) }
    open var touchbarBackgroundRedPressed: UIColor { return UIColor(hex: 0x780D13) }
    open var touchbarBackgroundTransparent: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.00) }
    open var touchbarIconAttention: UIColor { return UIColor(hex: 0xFC8B98) }
    open var touchbarIconStable: UIColor { return UIColor(hex: 0x27A17A) }
    open var touchbarIconSecure: UIColor { return UIColor(hex: 0x64B4FA) }
    public init() {}
}
open class LightMomentumThemeScrollbarColorPalette: MomentumThemeScrollbarColorPaletteProtocol {
    open var buttonNormal: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.46) }
    open var buttonHover: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.50) }
    open var buttonPressed: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.60) }
    open var arrowNormal: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.60) }
    open var arrowBackgroundNormal: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.00) }
    open var arrowBackgroundHover: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.20) }
    open var arrowBackgroundPressed: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.30) }
    open var backgroundSecondaryGhost: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.00) }
    open var backgroundSecondaryNormal: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.11) }
    public init() {}
}
open class LightMomentumThemeIllustrationsColorPalette: MomentumThemeIllustrationsColorPaletteProtocol {
    open var emptyPrimary0: UIColor { return UIColor(hex: 0x93C437) }
    open var emptyPrimary1: UIColor { return UIColor(hex: 0x279BE8) }
    open var emptySecondary0: UIColor { return UIColor(hex: 0x279BE8) }
    open var emptySecondary1: UIColor { return UIColor(hex: 0x875AE0) }
    open var onboardingPrimary0: UIColor { return UIColor(hex: 0xFFBE4F) }
    open var onboardingPrimary1: UIColor { return UIColor(hex: 0x93C437) }
    open var onboardingSecondary0: UIColor { return UIColor(hex: 0xF55868) }
    open var onboardingSecondary1: UIColor { return UIColor(hex: 0x875AE0) }
    open var onboardingTertiary0: UIColor { return UIColor(hex: 0xFFBE4F) }
    open var onboardingTertiary1: UIColor { return UIColor(hex: 0xEC6400) }
    open var onboardingQuartenary0: UIColor { return UIColor(hex: 0x93C437) }
    open var onboardingQuartenary1: UIColor { return UIColor(hex: 0x279BE8) }
    open var onboardingQuinary0: UIColor { return UIColor(hex: 0x279BE8) }
    open var onboardingQuinary1: UIColor { return UIColor(hex: 0x875AE0) }
    open var success0: UIColor { return UIColor(hex: 0x3CC29A) }
    open var success1: UIColor { return UIColor(hex: 0x93C437) }
    open var error0: UIColor { return UIColor(hex: 0xF0677E) }
    open var error1: UIColor { return UIColor(hex: 0xDB1F2E) }
    open var defaultColor: UIColor { return UIColor(hex: 0x000000) }
    public init() {}
}
open class LightMomentumThemeGlobalTintColorPalette: MomentumThemeGlobalTintColorPaletteProtocol {
    open var normal: UIColor { return UIColor(hex: 0x1170CF) }
    open var selected: UIColor { return UIColor(hex: 0x1170CF) }
    public init() {}
}
open class LightMomentumThemeGroupedBackgroundColorPalette: MomentumThemeGroupedBackgroundColorPaletteProtocol {
    open var primaryNormal: UIColor { return UIColor(hex: 0xF7F7F7) }
    open var secondaryNormal: UIColor { return UIColor(hex: 0xFFFFFF) }
    open var tertiaryNormal: UIColor { return UIColor(hex: 0xF7F7F7) }
    open var quaternaryNormal: UIColor { return UIColor(hex: 0xFFFFFF) }
    public init() {}
}
open class LightMomentumThemeAvatarColorPalette: MomentumThemeAvatarColorPaletteProtocol {
    open var defaultColor: UIColor { return UIColor(hex: 0x545454) }
    open var cobalt: UIColor { return UIColor(hex: 0x08599C) }
    open var cyan: UIColor { return UIColor(hex: 0x066070) }
    open var gold: UIColor { return UIColor(hex: 0x735107) }
    open var lime: UIColor { return UIColor(hex: 0x416116) }
    open var mint: UIColor { return UIColor(hex: 0x12615A) }
    open var orange: UIColor { return UIColor(hex: 0x9C3202) }
    open var pink: UIColor { return UIColor(hex: 0xA12A3A) }
    open var purple: UIColor { return UIColor(hex: 0x932099) }
    open var slate: UIColor { return UIColor(hex: 0x535573) }
    open var violet: UIColor { return UIColor(hex: 0x643ABD) }
    open var yellow: UIColor { return UIColor(hex: 0x7D4705) }
    open var hover: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.07) }
    open var pressed: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.20) }
    open var glassNormal: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.07) }
    open var glassActive: UIColor { return UIColor(hex: 0xFFFFFF, withAlpha: 0.80) }
    public init() {}
}
open class LightMomentumThemeGradientDividerColorPalette: MomentumThemeGradientDividerColorPaletteProtocol {
    open var defaultNormal0: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.00) }
    open var defaultNormal1: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.20) }
    open var defaultNormal2: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.20) }
    open var defaultNormal3: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.00) }
    open var defaultHover0: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.00) }
    open var defaultHover1: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.60) }
    open var defaultHover2: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.60) }
    open var defaultHover3: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.00) }
    open var errorNormal0: UIColor { return UIColor(hex: 0xAB0A15, withAlpha: 0.00) }
    open var errorNormal1: UIColor { return UIColor(hex: 0xAB0A15, withAlpha: 0.60) }
    open var errorNormal2: UIColor { return UIColor(hex: 0xAB0A15, withAlpha: 0.60) }
    open var errorNormal3: UIColor { return UIColor(hex: 0xAB0A15, withAlpha: 0.00) }
    open var errorHover0: UIColor { return UIColor(hex: 0xAB0A15, withAlpha: 0.00) }
    open var errorHover1: UIColor { return UIColor(hex: 0xAB0A15, withAlpha: 0.90) }
    open var errorHover2: UIColor { return UIColor(hex: 0xAB0A15, withAlpha: 0.90) }
    open var errorHover3: UIColor { return UIColor(hex: 0xAB0A15, withAlpha: 0.00) }
    open var warningNormal0: UIColor { return UIColor(hex: 0x7D4705, withAlpha: 0.00) }
    open var warningNormal1: UIColor { return UIColor(hex: 0x7D4705, withAlpha: 0.60) }
    open var warningNormal2: UIColor { return UIColor(hex: 0x7D4705, withAlpha: 0.60) }
    open var warningNormal3: UIColor { return UIColor(hex: 0x7D4705, withAlpha: 0.00) }
    open var warningHover0: UIColor { return UIColor(hex: 0x7D4705, withAlpha: 0.00) }
    open var warningHover1: UIColor { return UIColor(hex: 0x7D4705, withAlpha: 0.90) }
    open var warningHover2: UIColor { return UIColor(hex: 0x7D4705, withAlpha: 0.90) }
    open var warningHover3: UIColor { return UIColor(hex: 0x7D4705, withAlpha: 0.00) }
    open var announceNormal0: UIColor { return UIColor(hex: 0x0353A8, withAlpha: 0.00) }
    open var announceNormal1: UIColor { return UIColor(hex: 0x0353A8, withAlpha: 0.60) }
    open var announceNormal2: UIColor { return UIColor(hex: 0x0353A8, withAlpha: 0.60) }
    open var announceNormal3: UIColor { return UIColor(hex: 0x0353A8, withAlpha: 0.00) }
    open var announceHover0: UIColor { return UIColor(hex: 0x0353A8, withAlpha: 0.00) }
    open var announceHover1: UIColor { return UIColor(hex: 0x0353A8, withAlpha: 0.90) }
    open var announceHover2: UIColor { return UIColor(hex: 0x0353A8, withAlpha: 0.90) }
    open var announceHover3: UIColor { return UIColor(hex: 0x0353A8, withAlpha: 0.00) }
    open var successNormal0: UIColor { return UIColor(hex: 0x185E46, withAlpha: 0.00) }
    open var successNormal1: UIColor { return UIColor(hex: 0x185E46, withAlpha: 0.60) }
    open var successNormal2: UIColor { return UIColor(hex: 0x185E46, withAlpha: 0.60) }
    open var successNormal3: UIColor { return UIColor(hex: 0x185E46, withAlpha: 0.00) }
    open var successHover0: UIColor { return UIColor(hex: 0x185E46, withAlpha: 0.00) }
    open var successHover1: UIColor { return UIColor(hex: 0x185E46, withAlpha: 0.90) }
    open var successHover2: UIColor { return UIColor(hex: 0x185E46, withAlpha: 0.90) }
    open var successHover3: UIColor { return UIColor(hex: 0x185E46, withAlpha: 0.00) }
    open var orangeNormal0: UIColor { return UIColor(hex: 0x9C3202, withAlpha: 0.00) }
    open var orangeNormal1: UIColor { return UIColor(hex: 0x9C3202, withAlpha: 0.60) }
    open var orangeNormal2: UIColor { return UIColor(hex: 0x9C3202, withAlpha: 0.60) }
    open var orangeNormal3: UIColor { return UIColor(hex: 0x9C3202, withAlpha: 0.00) }
    open var orangeHover0: UIColor { return UIColor(hex: 0x9C3202, withAlpha: 0.00) }
    open var orangeHover1: UIColor { return UIColor(hex: 0x9C3202, withAlpha: 0.90) }
    open var orangeHover2: UIColor { return UIColor(hex: 0x9C3202, withAlpha: 0.90) }
    open var orangeHover3: UIColor { return UIColor(hex: 0x9C3202, withAlpha: 0.00) }
    open var purpleNormal0: UIColor { return UIColor(hex: 0x932099, withAlpha: 0.00) }
    open var purpleNormal1: UIColor { return UIColor(hex: 0x932099, withAlpha: 0.60) }
    open var purpleNormal2: UIColor { return UIColor(hex: 0x932099, withAlpha: 0.60) }
    open var purpleNormal3: UIColor { return UIColor(hex: 0x932099, withAlpha: 0.00) }
    open var purpleHover0: UIColor { return UIColor(hex: 0x932099, withAlpha: 0.00) }
    open var purpleHover1: UIColor { return UIColor(hex: 0x932099, withAlpha: 0.90) }
    open var purpleHover2: UIColor { return UIColor(hex: 0x932099, withAlpha: 0.90) }
    open var purpleHover3: UIColor { return UIColor(hex: 0x932099, withAlpha: 0.00) }
    open var verticalNormal0: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.00) }
    open var verticalNormal1: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.20) }
    open var verticalNormal2: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.20) }
    open var verticalNormal3: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.00) }
    open var verticalHover0: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.00) }
    open var verticalHover1: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.60) }
    open var verticalHover2: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.60) }
    open var verticalHover3: UIColor { return UIColor(hex: 0x000000, withAlpha: 0.00) }
    public init() {}
}
open class LightMomentumThemeFocusColorPalette: MomentumThemeFocusColorPaletteProtocol {
    open var default0: UIColor { return UIColor(hex: 0xFFFFFF) }
    open var default1: UIColor { return UIColor(hex: 0x1170CF) }
    open var default2: UIColor { return UIColor(hex: 0x1170CF, withAlpha: 0.35) }
    public init() {}
}
open class LightMomentumTheme: MomentumThemeTokensProtocol {
    open var text: any MomentumThemeTextColorPaletteProtocol
    open var inverted: any MomentumThemeInvertedColorPaletteProtocol
    open var background: any MomentumThemeBackgroundColorPaletteProtocol
    open var button: any MomentumThemeButtonColorPaletteProtocol
    open var outline: any MomentumThemeOutlineColorPaletteProtocol
    open var control: any MomentumThemeControlColorPaletteProtocol
    open var overlay: any MomentumThemeOverlayColorPaletteProtocol
    open var indicator: any MomentumThemeIndicatorColorPaletteProtocol
    open var common: any MomentumThemeCommonColorPaletteProtocol
    open var scrollbar: any MomentumThemeScrollbarColorPaletteProtocol
    open var illustrations: any MomentumThemeIllustrationsColorPaletteProtocol
    open var globalTint: any MomentumThemeGlobalTintColorPaletteProtocol
    open var groupedBackground: any MomentumThemeGroupedBackgroundColorPaletteProtocol
    open var avatar: any MomentumThemeAvatarColorPaletteProtocol
    open var gradientDivider: any MomentumThemeGradientDividerColorPaletteProtocol
    open var focus: any MomentumThemeFocusColorPaletteProtocol

    public init(
        text: any MomentumThemeTextColorPaletteProtocol = LightMomentumThemeTextColorPalette(),
        inverted: any MomentumThemeInvertedColorPaletteProtocol = LightMomentumThemeInvertedColorPalette(),
        background: any MomentumThemeBackgroundColorPaletteProtocol = LightMomentumThemeBackgroundColorPalette(),
        button: any MomentumThemeButtonColorPaletteProtocol = LightMomentumThemeButtonColorPalette(),
        outline: any MomentumThemeOutlineColorPaletteProtocol = LightMomentumThemeOutlineColorPalette(),
        control: any MomentumThemeControlColorPaletteProtocol = LightMomentumThemeControlColorPalette(),
        overlay: any MomentumThemeOverlayColorPaletteProtocol = LightMomentumThemeOverlayColorPalette(),
        indicator: any MomentumThemeIndicatorColorPaletteProtocol = LightMomentumThemeIndicatorColorPalette(),
        common: any MomentumThemeCommonColorPaletteProtocol = LightMomentumThemeCommonColorPalette(),
        scrollbar: any MomentumThemeScrollbarColorPaletteProtocol = LightMomentumThemeScrollbarColorPalette(),
        illustrations: any MomentumThemeIllustrationsColorPaletteProtocol = LightMomentumThemeIllustrationsColorPalette(),
        globalTint: any MomentumThemeGlobalTintColorPaletteProtocol = LightMomentumThemeGlobalTintColorPalette(),
        groupedBackground: any MomentumThemeGroupedBackgroundColorPaletteProtocol = LightMomentumThemeGroupedBackgroundColorPalette(),
        avatar: any MomentumThemeAvatarColorPaletteProtocol = LightMomentumThemeAvatarColorPalette(),
        gradientDivider: any MomentumThemeGradientDividerColorPaletteProtocol = LightMomentumThemeGradientDividerColorPalette(),
        focus: any MomentumThemeFocusColorPaletteProtocol = LightMomentumThemeFocusColorPalette()
    ) {
        self.text = text
        self.inverted = inverted
        self.background = background
        self.button = button
        self.outline = outline
        self.control = control
        self.overlay = overlay
        self.indicator = indicator
        self.common = common
        self.scrollbar = scrollbar
        self.illustrations = illustrations
        self.globalTint = globalTint
        self.groupedBackground = groupedBackground
        self.avatar = avatar
        self.gradientDivider = gradientDivider
        self.focus = focus
    }
}

public class SystemMomentumTheme: MomentumThemeTokensProtocol {
    public let text: any MomentumThemeTextColorPaletteProtocol = SystemMomentumThemeTextColorPalette()
    public let inverted: any MomentumThemeInvertedColorPaletteProtocol = SystemMomentumThemeInvertedColorPalette()
    public let background: any MomentumThemeBackgroundColorPaletteProtocol = SystemMomentumThemeBackgroundColorPalette()
    public let button: any MomentumThemeButtonColorPaletteProtocol = SystemMomentumThemeButtonColorPalette()
    public let outline: any MomentumThemeOutlineColorPaletteProtocol = SystemMomentumThemeOutlineColorPalette()
    public let control: any MomentumThemeControlColorPaletteProtocol = SystemMomentumThemeControlColorPalette()
    public let overlay: any MomentumThemeOverlayColorPaletteProtocol = SystemMomentumThemeOverlayColorPalette()
    public let indicator: any MomentumThemeIndicatorColorPaletteProtocol = SystemMomentumThemeIndicatorColorPalette()
    public let common: any MomentumThemeCommonColorPaletteProtocol = SystemMomentumThemeCommonColorPalette()
    public let scrollbar: any MomentumThemeScrollbarColorPaletteProtocol = SystemMomentumThemeScrollbarColorPalette()
    public let illustrations: any MomentumThemeIllustrationsColorPaletteProtocol = SystemMomentumThemeIllustrationsColorPalette()
    public let globalTint: any MomentumThemeGlobalTintColorPaletteProtocol = SystemMomentumThemeGlobalTintColorPalette()
    public let groupedBackground: any MomentumThemeGroupedBackgroundColorPaletteProtocol = SystemMomentumThemeGroupedBackgroundColorPalette()
    public let avatar: any MomentumThemeAvatarColorPaletteProtocol = SystemMomentumThemeAvatarColorPalette()
    public let gradientDivider: any MomentumThemeGradientDividerColorPaletteProtocol = SystemMomentumThemeGradientDividerColorPalette()
    public let focus: any MomentumThemeFocusColorPaletteProtocol = SystemMomentumThemeFocusColorPalette()
    public init() {}
}

open class SystemMomentumThemeTextColorPalette: MomentumThemeTextColorPaletteProtocol {
    private let light: any MomentumThemeTextColorPaletteProtocol = LightMomentumThemeTextColorPalette()
    private let dark: any MomentumThemeTextColorPaletteProtocol = DarkMomentumThemeTextColorPalette()
    open var primaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.primaryNormal) }
    open var primaryDisabled: UIColor { return systemColor(light: light, dark: dark, keyPath: \.primaryDisabled) }
    open var secondaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.secondaryNormal) }
    open var errorNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.errorNormal) }
    open var errorHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.errorHover) }
    open var errorActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.errorActive) }
    open var successNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.successNormal) }
    open var successHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.successHover) }
    open var successActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.successActive) }
    open var warningNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.warningNormal) }
    open var warningHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.warningHover) }
    open var warningActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.warningActive) }
    open var highlight: UIColor { return systemColor(light: light, dark: dark, keyPath: \.highlight) }
    open var accentNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.accentNormal) }
    open var accentHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.accentHover) }
    open var accentActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.accentActive) }
    open var teamdefaultNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamdefaultNormal) }
    open var teamdefaultHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamdefaultHover) }
    open var teamdefaultActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamdefaultActive) }
    open var alertPurpleNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.alertPurpleNormal) }
    open var alertPurpleHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.alertPurpleHover) }
    open var alertPurpleActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.alertPurpleActive) }
    open var alertOrangeNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.alertOrangeNormal) }
    open var alertOrangeHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.alertOrangeHover) }
    open var alertOrangeActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.alertOrangeActive) }
    open var teamCobaltNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamCobaltNormal) }
    open var teamCobaltHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamCobaltHover) }
    open var teamCobaltActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamCobaltActive) }
    open var teamCyanNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamCyanNormal) }
    open var teamCyanHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamCyanHover) }
    open var teamCyanActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamCyanActive) }
    open var teamMintNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamMintNormal) }
    open var teamMintHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamMintHover) }
    open var teamMintActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamMintActive) }
    open var teamLimeNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamLimeNormal) }
    open var teamLimeHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamLimeHover) }
    open var teamLimeActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamLimeActive) }
    open var teamGoldNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamGoldNormal) }
    open var teamGoldHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamGoldHover) }
    open var teamGoldActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamGoldActive) }
    open var teamOrangeNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamOrangeNormal) }
    open var teamOrangeHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamOrangeHover) }
    open var teamOrangeActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamOrangeActive) }
    open var teamPinkNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamPinkNormal) }
    open var teamPinkHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamPinkHover) }
    open var teamPinkActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamPinkActive) }
    open var teamPurpleNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamPurpleNormal) }
    open var teamPurpleHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamPurpleHover) }
    open var teamPurpleActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamPurpleActive) }
    open var teamVioletNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamVioletNormal) }
    open var teamVioletHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamVioletHover) }
    open var teamVioletActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamVioletActive) }
    open var teamSlateNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamSlateNormal) }
    open var teamSlateHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamSlateHover) }
    open var teamSlateActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.teamSlateActive) }
    public init() {}
}
open class SystemMomentumThemeInvertedColorPalette: MomentumThemeInvertedColorPaletteProtocol {
    private let light: any MomentumThemeInvertedColorPaletteProtocol = LightMomentumThemeInvertedColorPalette()
    private let dark: any MomentumThemeInvertedColorPaletteProtocol = DarkMomentumThemeInvertedColorPalette()
    open var textPrimaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.textPrimaryNormal) }
    open var textPrimaryDisabled: UIColor { return systemColor(light: light, dark: dark, keyPath: \.textPrimaryDisabled) }
    open var textSecondaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.textSecondaryNormal) }
    open var textAccentNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.textAccentNormal) }
    open var textAccentHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.textAccentHover) }
    open var textAccentActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.textAccentActive) }
    open var backgroundNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.backgroundNormal) }
    open var buttonPrimaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonPrimaryNormal) }
    open var buttonPrimaryHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonPrimaryHover) }
    open var buttonPrimaryPressed: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonPrimaryPressed) }
    open var buttonPrimaryDisabled: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonPrimaryDisabled) }
    open var buttonSecondaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonSecondaryNormal) }
    open var buttonSecondaryHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonSecondaryHover) }
    open var buttonSecondaryPressed: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonSecondaryPressed) }
    open var buttonSecondaryDisabled: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonSecondaryDisabled) }
    open var outlineButtonNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.outlineButtonNormal) }
    open var outlinePrimaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.outlinePrimaryNormal) }
    open var outlineDisabledNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.outlineDisabledNormal) }
    open var outlineThemeNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.outlineThemeNormal) }
    open var controlActiveNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.controlActiveNormal) }
    open var controlActiveHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.controlActiveHover) }
    open var controlActivePressed: UIColor { return systemColor(light: light, dark: dark, keyPath: \.controlActivePressed) }
    open var controlActiveActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.controlActiveActive) }
    open var controlActiveDisabled: UIColor { return systemColor(light: light, dark: dark, keyPath: \.controlActiveDisabled) }
    open var controlInactiveNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.controlInactiveNormal) }
    open var controlInactiveHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.controlInactiveHover) }
    open var controlInactivePressed: UIColor { return systemColor(light: light, dark: dark, keyPath: \.controlInactivePressed) }
    open var controlInactiveDisabled: UIColor { return systemColor(light: light, dark: dark, keyPath: \.controlInactiveDisabled) }
    public init() {}
}
open class SystemMomentumThemeBackgroundColorPalette: MomentumThemeBackgroundColorPaletteProtocol {
    private let light: any MomentumThemeBackgroundColorPaletteProtocol = LightMomentumThemeBackgroundColorPalette()
    private let dark: any MomentumThemeBackgroundColorPaletteProtocol = DarkMomentumThemeBackgroundColorPalette()
    open var primaryGhost: UIColor { return systemColor(light: light, dark: dark, keyPath: \.primaryGhost) }
    open var primaryHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.primaryHover) }
    open var primaryActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.primaryActive) }
    open var primaryDisabled: UIColor { return systemColor(light: light, dark: dark, keyPath: \.primaryDisabled) }
    open var solidPrimaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.solidPrimaryNormal) }
    open var solidSecondaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.solidSecondaryNormal) }
    open var solidTertiaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.solidTertiaryNormal) }
    open var solidQuaternaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.solidQuaternaryNormal) }
    open var secondaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.secondaryNormal) }
    open var secondaryHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.secondaryHover) }
    open var secondaryActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.secondaryActive) }
    open var secondaryDisabled: UIColor { return systemColor(light: light, dark: dark, keyPath: \.secondaryDisabled) }
    open var accentNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.accentNormal) }
    open var accentActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.accentActive) }
    open var alertDefaultNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.alertDefaultNormal) }
    open var alertDefaultHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.alertDefaultHover) }
    open var alertDefaultActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.alertDefaultActive) }
    open var alertSuccessNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.alertSuccessNormal) }
    open var alertSuccessHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.alertSuccessHover) }
    open var alertSuccessActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.alertSuccessActive) }
    open var alertWarningNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.alertWarningNormal) }
    open var alertWarningHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.alertWarningHover) }
    open var alertWarningActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.alertWarningActive) }
    open var alertErrorNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.alertErrorNormal) }
    open var alertErrorHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.alertErrorHover) }
    open var alertErrorActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.alertErrorActive) }
    open var alertThemeNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.alertThemeNormal) }
    open var alertThemeHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.alertThemeHover) }
    open var alertThemeActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.alertThemeActive) }
    open var alertPurpleNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.alertPurpleNormal) }
    open var alertPurpleHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.alertPurpleHover) }
    open var alertPurpleActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.alertPurpleActive) }
    open var alertOrangeNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.alertOrangeNormal) }
    open var alertOrangeHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.alertOrangeHover) }
    open var alertOrangeActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.alertOrangeActive) }
    open var labelCobaltNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelCobaltNormal) }
    open var labelCobaltHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelCobaltHover) }
    open var labelCobaltActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelCobaltActive) }
    open var labelGoldNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelGoldNormal) }
    open var labelGoldHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelGoldHover) }
    open var labelGoldActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelGoldActive) }
    open var labelLimeNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelLimeNormal) }
    open var labelLimeHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelLimeHover) }
    open var labelLimeActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelLimeActive) }
    open var labelMintNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelMintNormal) }
    open var labelMintHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelMintHover) }
    open var labelMintActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelMintActive) }
    open var labelOrangeNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelOrangeNormal) }
    open var labelOrangeHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelOrangeHover) }
    open var labelOrangeActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelOrangeActive) }
    open var labelPinkNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelPinkNormal) }
    open var labelPinkHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelPinkHover) }
    open var labelPinkActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelPinkActive) }
    open var labelPurpleNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelPurpleNormal) }
    open var labelPurpleHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelPurpleHover) }
    open var labelPurpleActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelPurpleActive) }
    open var labelSlateNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelSlateNormal) }
    open var labelSlateHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelSlateHover) }
    open var labelSlateActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelSlateActive) }
    open var labelVioletNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelVioletNormal) }
    open var labelVioletHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelVioletHover) }
    open var labelVioletActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelVioletActive) }
    open var labelDefaultNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelDefaultNormal) }
    open var labelDefaultHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelDefaultHover) }
    open var labelDefaultActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelDefaultActive) }
    open var labelErrorNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelErrorNormal) }
    open var labelErrorHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelErrorHover) }
    open var labelErrorActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelErrorActive) }
    open var namelabelNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.namelabelNormal) }
    open var gradientPrimaryNormal0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.gradientPrimaryNormal0) }
    open var gradientPrimaryNormal1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.gradientPrimaryNormal1) }
    open var gradientSecondaryNormal0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.gradientSecondaryNormal0) }
    open var gradientSecondaryNormal1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.gradientSecondaryNormal1) }
    open var reactionNormal0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.reactionNormal0) }
    open var reactionNormal1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.reactionNormal1) }
    open var skeletonNormal0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.skeletonNormal0) }
    open var skeletonNormal1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.skeletonNormal1) }
    open var skeletonNormal2: UIColor { return systemColor(light: light, dark: dark, keyPath: \.skeletonNormal2) }
    open var skeletonNormal3: UIColor { return systemColor(light: light, dark: dark, keyPath: \.skeletonNormal3) }
    open var glassNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.glassNormal) }
    open var glassOverlayNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.glassOverlayNormal) }
    open var glassOverlayInactive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.glassOverlayInactive) }
    public init() {}
}
open class SystemMomentumThemeButtonColorPalette: MomentumThemeButtonColorPaletteProtocol {
    private let light: any MomentumThemeButtonColorPaletteProtocol = LightMomentumThemeButtonColorPalette()
    private let dark: any MomentumThemeButtonColorPaletteProtocol = DarkMomentumThemeButtonColorPalette()
    open var primaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.primaryNormal) }
    open var primaryHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.primaryHover) }
    open var primaryPressed: UIColor { return systemColor(light: light, dark: dark, keyPath: \.primaryPressed) }
    open var primaryDisabled: UIColor { return systemColor(light: light, dark: dark, keyPath: \.primaryDisabled) }
    open var secondaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.secondaryNormal) }
    open var secondaryHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.secondaryHover) }
    open var secondaryPressed: UIColor { return systemColor(light: light, dark: dark, keyPath: \.secondaryPressed) }
    open var secondaryDisabled: UIColor { return systemColor(light: light, dark: dark, keyPath: \.secondaryDisabled) }
    open var secondaryActiveNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.secondaryActiveNormal) }
    open var secondaryActiveHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.secondaryActiveHover) }
    open var secondaryActivePressed: UIColor { return systemColor(light: light, dark: dark, keyPath: \.secondaryActivePressed) }
    open var secondaryActiveDisabled: UIColor { return systemColor(light: light, dark: dark, keyPath: \.secondaryActiveDisabled) }
    open var joinNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.joinNormal) }
    open var joinHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.joinHover) }
    open var joinPressed: UIColor { return systemColor(light: light, dark: dark, keyPath: \.joinPressed) }
    open var cancelNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.cancelNormal) }
    open var cancelHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.cancelHover) }
    open var cancelPressed: UIColor { return systemColor(light: light, dark: dark, keyPath: \.cancelPressed) }
    open var accentNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.accentNormal) }
    open var accentHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.accentHover) }
    open var accentPressed: UIColor { return systemColor(light: light, dark: dark, keyPath: \.accentPressed) }
    open var glassPrimaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.glassPrimaryNormal) }
    open var glassPrimaryHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.glassPrimaryHover) }
    open var glassPrimaryPressed: UIColor { return systemColor(light: light, dark: dark, keyPath: \.glassPrimaryPressed) }
    public init() {}
}
open class SystemMomentumThemeOutlineColorPalette: MomentumThemeOutlineColorPaletteProtocol {
    private let light: any MomentumThemeOutlineColorPaletteProtocol = LightMomentumThemeOutlineColorPalette()
    private let dark: any MomentumThemeOutlineColorPaletteProtocol = DarkMomentumThemeOutlineColorPalette()
    open var primaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.primaryNormal) }
    open var primaryDisabled: UIColor { return systemColor(light: light, dark: dark, keyPath: \.primaryDisabled) }
    open var themeNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.themeNormal) }
    open var secondaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.secondaryNormal) }
    open var inputNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.inputNormal) }
    open var inputActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.inputActive) }
    open var buttonNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonNormal) }
    open var joinNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.joinNormal) }
    open var cancelNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.cancelNormal) }
    open var shareSelected: UIColor { return systemColor(light: light, dark: dark, keyPath: \.shareSelected) }
    open var shareActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.shareActive) }
    open var shareInactive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.shareInactive) }
    open var overlayNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.overlayNormal) }
    open var highContrastFocus: UIColor { return systemColor(light: light, dark: dark, keyPath: \.highContrastFocus) }
    open var labelCobalt: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelCobalt) }
    open var labelGold: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelGold) }
    open var labelLime: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelLime) }
    open var labelMint: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelMint) }
    open var labelOrange: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelOrange) }
    open var labelPink: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelPink) }
    open var labelPurple: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelPurple) }
    open var labelSlate: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelSlate) }
    open var labelViolet: UIColor { return systemColor(light: light, dark: dark, keyPath: \.labelViolet) }
    open var promotionNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.promotionNormal) }
    open var gradientActive0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.gradientActive0) }
    open var gradientActive1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.gradientActive1) }
    open var gradientActive2: UIColor { return systemColor(light: light, dark: dark, keyPath: \.gradientActive2) }
    open var warningNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.warningNormal) }
    public init() {}
}
open class SystemMomentumThemeControlColorPalette: MomentumThemeControlColorPaletteProtocol {
    private let light: any MomentumThemeControlColorPaletteProtocol = LightMomentumThemeControlColorPalette()
    private let dark: any MomentumThemeControlColorPaletteProtocol = DarkMomentumThemeControlColorPalette()
    open var activeNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.activeNormal) }
    open var activeHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.activeHover) }
    open var activePressed: UIColor { return systemColor(light: light, dark: dark, keyPath: \.activePressed) }
    open var activeActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.activeActive) }
    open var activeDisabled: UIColor { return systemColor(light: light, dark: dark, keyPath: \.activeDisabled) }
    open var indicatorInactiveNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.indicatorInactiveNormal) }
    open var inactiveNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.inactiveNormal) }
    open var inactiveHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.inactiveHover) }
    open var inactivePressed: UIColor { return systemColor(light: light, dark: dark, keyPath: \.inactivePressed) }
    open var inactiveDisabled: UIColor { return systemColor(light: light, dark: dark, keyPath: \.inactiveDisabled) }
    public init() {}
}
open class SystemMomentumThemeOverlayColorPalette: MomentumThemeOverlayColorPaletteProtocol {
    private let light: any MomentumThemeOverlayColorPaletteProtocol = LightMomentumThemeOverlayColorPalette()
    private let dark: any MomentumThemeOverlayColorPaletteProtocol = DarkMomentumThemeOverlayColorPalette()
    open var meetingsNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.meetingsNormal) }
    open var buttonSecondaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonSecondaryNormal) }
    open var buttonSecondaryHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonSecondaryHover) }
    open var buttonSecondaryPressed: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonSecondaryPressed) }
    public init() {}
}
open class SystemMomentumThemeIndicatorColorPalette: MomentumThemeIndicatorColorPaletteProtocol {
    private let light: any MomentumThemeIndicatorColorPaletteProtocol = LightMomentumThemeIndicatorColorPalette()
    private let dark: any MomentumThemeIndicatorColorPaletteProtocol = DarkMomentumThemeIndicatorColorPalette()
    open var unstable: UIColor { return systemColor(light: light, dark: dark, keyPath: \.unstable) }
    open var attention: UIColor { return systemColor(light: light, dark: dark, keyPath: \.attention) }
    open var stable: UIColor { return systemColor(light: light, dark: dark, keyPath: \.stable) }
    open var locked: UIColor { return systemColor(light: light, dark: dark, keyPath: \.locked) }
    open var caution: UIColor { return systemColor(light: light, dark: dark, keyPath: \.caution) }
    open var secure: UIColor { return systemColor(light: light, dark: dark, keyPath: \.secure) }
    public init() {}
}
open class SystemMomentumThemeCommonColorPalette: MomentumThemeCommonColorPaletteProtocol {
    private let light: any MomentumThemeCommonColorPaletteProtocol = LightMomentumThemeCommonColorPalette()
    private let dark: any MomentumThemeCommonColorPaletteProtocol = DarkMomentumThemeCommonColorPalette()
    open var whiteboardStickyNoteYellow: UIColor { return systemColor(light: light, dark: dark, keyPath: \.whiteboardStickyNoteYellow) }
    open var whiteboardStickyNoteRed: UIColor { return systemColor(light: light, dark: dark, keyPath: \.whiteboardStickyNoteRed) }
    open var whiteboardStickyNotePurple: UIColor { return systemColor(light: light, dark: dark, keyPath: \.whiteboardStickyNotePurple) }
    open var whiteboardStickyNoteCyan: UIColor { return systemColor(light: light, dark: dark, keyPath: \.whiteboardStickyNoteCyan) }
    open var whiteboardStickyNoteMint: UIColor { return systemColor(light: light, dark: dark, keyPath: \.whiteboardStickyNoteMint) }
    open var whiteboardPenBlack: UIColor { return systemColor(light: light, dark: dark, keyPath: \.whiteboardPenBlack) }
    open var whiteboardPenRed: UIColor { return systemColor(light: light, dark: dark, keyPath: \.whiteboardPenRed) }
    open var whiteboardPenPurple: UIColor { return systemColor(light: light, dark: dark, keyPath: \.whiteboardPenPurple) }
    open var whiteboardPenBlue: UIColor { return systemColor(light: light, dark: dark, keyPath: \.whiteboardPenBlue) }
    open var whiteboardPenGreen: UIColor { return systemColor(light: light, dark: dark, keyPath: \.whiteboardPenGreen) }
    open var whiteboardPenYellow: UIColor { return systemColor(light: light, dark: dark, keyPath: \.whiteboardPenYellow) }
    open var whiteboardPenWhite: UIColor { return systemColor(light: light, dark: dark, keyPath: \.whiteboardPenWhite) }
    open var textPrimaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.textPrimaryNormal) }
    open var textPrimaryDisabled: UIColor { return systemColor(light: light, dark: dark, keyPath: \.textPrimaryDisabled) }
    open var textSecondaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.textSecondaryNormal) }
    open var textSuccessNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.textSuccessNormal) }
    open var textSuccessHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.textSuccessHover) }
    open var textErrorNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.textErrorNormal) }
    open var textErrorHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.textErrorHover) }
    open var textWarningNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.textWarningNormal) }
    open var textWarningHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.textWarningHover) }
    open var invertedTextPrimaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.invertedTextPrimaryNormal) }
    open var invertedTextSecondaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.invertedTextSecondaryNormal) }
    open var invertedButtonSecondaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.invertedButtonSecondaryNormal) }
    open var invertedButtonSecondaryHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.invertedButtonSecondaryHover) }
    open var invertedButtonSecondaryPressed: UIColor { return systemColor(light: light, dark: dark, keyPath: \.invertedButtonSecondaryPressed) }
    open var invertedButtonSecondaryDisabled: UIColor { return systemColor(light: light, dark: dark, keyPath: \.invertedButtonSecondaryDisabled) }
    open var overlaysPrimaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.overlaysPrimaryNormal) }
    open var overlaysSecondaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.overlaysSecondaryNormal) }
    open var overlaysMeetingNormal0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.overlaysMeetingNormal0) }
    open var overlaysMeetingNormal1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.overlaysMeetingNormal1) }
    open var overlaysMeetingNormal2: UIColor { return systemColor(light: light, dark: dark, keyPath: \.overlaysMeetingNormal2) }
    open var buttonPrimaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonPrimaryNormal) }
    open var buttonPrimaryHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonPrimaryHover) }
    open var buttonPrimaryPressed: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonPrimaryPressed) }
    open var buttonPrimaryDisabled: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonPrimaryDisabled) }
    open var buttonSecondaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonSecondaryNormal) }
    open var buttonSecondaryHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonSecondaryHover) }
    open var buttonSecondaryActiveNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonSecondaryActiveNormal) }
    open var buttonSecondaryActiveHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonSecondaryActiveHover) }
    open var buttonSecondaryActivePressed: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonSecondaryActivePressed) }
    open var buttonSecondaryActiveDisabled: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonSecondaryActiveDisabled) }
    open var buttonSecondaryDisabled: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonSecondaryDisabled) }
    open var buttonPromotionNormal0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonPromotionNormal0) }
    open var buttonPromotionNormal1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonPromotionNormal1) }
    open var buttonPromotionHover0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonPromotionHover0) }
    open var buttonPromotionHover1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonPromotionHover1) }
    open var buttonPromotionActive0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonPromotionActive0) }
    open var buttonPromotionActive1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonPromotionActive1) }
    open var buttonJoinAnimatedGradientNormal0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonJoinAnimatedGradientNormal0) }
    open var buttonJoinAnimatedGradientNormal1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonJoinAnimatedGradientNormal1) }
    open var buttonJoinAnimatedGradientNormal2: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonJoinAnimatedGradientNormal2) }
    open var outlineButtonNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.outlineButtonNormal) }
    open var outlinePrimaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.outlinePrimaryNormal) }
    open var outlinePrimaryDisabled: UIColor { return systemColor(light: light, dark: dark, keyPath: \.outlinePrimaryDisabled) }
    open var outlineInputNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.outlineInputNormal) }
    open var outlineSecondaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.outlineSecondaryNormal) }
    open var outlineSecondaryDisabled: UIColor { return systemColor(light: light, dark: dark, keyPath: \.outlineSecondaryDisabled) }
    open var outlineWarningNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.outlineWarningNormal) }
    open var controlShareContentSelected: UIColor { return systemColor(light: light, dark: dark, keyPath: \.controlShareContentSelected) }
    open var controlShareContentActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.controlShareContentActive) }
    open var controlShareContentInactive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.controlShareContentInactive) }
    open var controlInactiveNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.controlInactiveNormal) }
    open var backgroundAlertShareNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.backgroundAlertShareNormal) }
    open var backgroundSolidDark: UIColor { return systemColor(light: light, dark: dark, keyPath: \.backgroundSolidDark) }
    open var backgroundSolidLight: UIColor { return systemColor(light: light, dark: dark, keyPath: \.backgroundSolidLight) }
    open var contentPdf: UIColor { return systemColor(light: light, dark: dark, keyPath: \.contentPdf) }
    open var contentWord: UIColor { return systemColor(light: light, dark: dark, keyPath: \.contentWord) }
    open var contentPowerpoint: UIColor { return systemColor(light: light, dark: dark, keyPath: \.contentPowerpoint) }
    open var contentExcel: UIColor { return systemColor(light: light, dark: dark, keyPath: \.contentExcel) }
    open var contentOnenote: UIColor { return systemColor(light: light, dark: dark, keyPath: \.contentOnenote) }
    open var contentSheets: UIColor { return systemColor(light: light, dark: dark, keyPath: \.contentSheets) }
    open var contentSlides: UIColor { return systemColor(light: light, dark: dark, keyPath: \.contentSlides) }
    open var contentKeynote: UIColor { return systemColor(light: light, dark: dark, keyPath: \.contentKeynote) }
    open var contentDoc: UIColor { return systemColor(light: light, dark: dark, keyPath: \.contentDoc) }
    open var touchbarBackgroundBlueNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.touchbarBackgroundBlueNormal) }
    open var touchbarBackgroundBluePressed: UIColor { return systemColor(light: light, dark: dark, keyPath: \.touchbarBackgroundBluePressed) }
    open var touchbarBackgroundPinkNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.touchbarBackgroundPinkNormal) }
    open var touchbarBackgroundPinkPressed: UIColor { return systemColor(light: light, dark: dark, keyPath: \.touchbarBackgroundPinkPressed) }
    open var touchbarBackgroundMintNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.touchbarBackgroundMintNormal) }
    open var touchbarBackgroundMintPressed: UIColor { return systemColor(light: light, dark: dark, keyPath: \.touchbarBackgroundMintPressed) }
    open var touchbarBackgroundPurpleNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.touchbarBackgroundPurpleNormal) }
    open var touchbarBackgroundPurplePressed: UIColor { return systemColor(light: light, dark: dark, keyPath: \.touchbarBackgroundPurplePressed) }
    open var touchbarBackgroundVioletNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.touchbarBackgroundVioletNormal) }
    open var touchbarBackgroundVioletPressed: UIColor { return systemColor(light: light, dark: dark, keyPath: \.touchbarBackgroundVioletPressed) }
    open var touchbarBackgroundOrangeNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.touchbarBackgroundOrangeNormal) }
    open var touchbarBackgroundOrangePressed: UIColor { return systemColor(light: light, dark: dark, keyPath: \.touchbarBackgroundOrangePressed) }
    open var touchbarBackgroundGreenNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.touchbarBackgroundGreenNormal) }
    open var touchbarBackgroundGreenPressed: UIColor { return systemColor(light: light, dark: dark, keyPath: \.touchbarBackgroundGreenPressed) }
    open var touchbarBackgroundRedNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.touchbarBackgroundRedNormal) }
    open var touchbarBackgroundRedPressed: UIColor { return systemColor(light: light, dark: dark, keyPath: \.touchbarBackgroundRedPressed) }
    open var touchbarBackgroundTransparent: UIColor { return systemColor(light: light, dark: dark, keyPath: \.touchbarBackgroundTransparent) }
    open var touchbarIconAttention: UIColor { return systemColor(light: light, dark: dark, keyPath: \.touchbarIconAttention) }
    open var touchbarIconStable: UIColor { return systemColor(light: light, dark: dark, keyPath: \.touchbarIconStable) }
    open var touchbarIconSecure: UIColor { return systemColor(light: light, dark: dark, keyPath: \.touchbarIconSecure) }
    public init() {}
}
open class SystemMomentumThemeScrollbarColorPalette: MomentumThemeScrollbarColorPaletteProtocol {
    private let light: any MomentumThemeScrollbarColorPaletteProtocol = LightMomentumThemeScrollbarColorPalette()
    private let dark: any MomentumThemeScrollbarColorPaletteProtocol = DarkMomentumThemeScrollbarColorPalette()
    open var buttonNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonNormal) }
    open var buttonHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonHover) }
    open var buttonPressed: UIColor { return systemColor(light: light, dark: dark, keyPath: \.buttonPressed) }
    open var arrowNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.arrowNormal) }
    open var arrowBackgroundNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.arrowBackgroundNormal) }
    open var arrowBackgroundHover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.arrowBackgroundHover) }
    open var arrowBackgroundPressed: UIColor { return systemColor(light: light, dark: dark, keyPath: \.arrowBackgroundPressed) }
    open var backgroundSecondaryGhost: UIColor { return systemColor(light: light, dark: dark, keyPath: \.backgroundSecondaryGhost) }
    open var backgroundSecondaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.backgroundSecondaryNormal) }
    public init() {}
}
open class SystemMomentumThemeIllustrationsColorPalette: MomentumThemeIllustrationsColorPaletteProtocol {
    private let light: any MomentumThemeIllustrationsColorPaletteProtocol = LightMomentumThemeIllustrationsColorPalette()
    private let dark: any MomentumThemeIllustrationsColorPaletteProtocol = DarkMomentumThemeIllustrationsColorPalette()
    open var emptyPrimary0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.emptyPrimary0) }
    open var emptyPrimary1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.emptyPrimary1) }
    open var emptySecondary0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.emptySecondary0) }
    open var emptySecondary1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.emptySecondary1) }
    open var onboardingPrimary0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.onboardingPrimary0) }
    open var onboardingPrimary1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.onboardingPrimary1) }
    open var onboardingSecondary0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.onboardingSecondary0) }
    open var onboardingSecondary1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.onboardingSecondary1) }
    open var onboardingTertiary0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.onboardingTertiary0) }
    open var onboardingTertiary1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.onboardingTertiary1) }
    open var onboardingQuartenary0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.onboardingQuartenary0) }
    open var onboardingQuartenary1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.onboardingQuartenary1) }
    open var onboardingQuinary0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.onboardingQuinary0) }
    open var onboardingQuinary1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.onboardingQuinary1) }
    open var success0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.success0) }
    open var success1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.success1) }
    open var error0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.error0) }
    open var error1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.error1) }
    open var defaultColor: UIColor { return systemColor(light: light, dark: dark, keyPath: \.defaultColor) }
    public init() {}
}
open class SystemMomentumThemeGlobalTintColorPalette: MomentumThemeGlobalTintColorPaletteProtocol {
    private let light: any MomentumThemeGlobalTintColorPaletteProtocol = LightMomentumThemeGlobalTintColorPalette()
    private let dark: any MomentumThemeGlobalTintColorPaletteProtocol = DarkMomentumThemeGlobalTintColorPalette()
    open var normal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.normal) }
    open var selected: UIColor { return systemColor(light: light, dark: dark, keyPath: \.selected) }
    public init() {}
}
open class SystemMomentumThemeGroupedBackgroundColorPalette: MomentumThemeGroupedBackgroundColorPaletteProtocol {
    private let light: any MomentumThemeGroupedBackgroundColorPaletteProtocol = LightMomentumThemeGroupedBackgroundColorPalette()
    private let dark: any MomentumThemeGroupedBackgroundColorPaletteProtocol = DarkMomentumThemeGroupedBackgroundColorPalette()
    open var primaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.primaryNormal) }
    open var secondaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.secondaryNormal) }
    open var tertiaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.tertiaryNormal) }
    open var quaternaryNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.quaternaryNormal) }
    public init() {}
}
open class SystemMomentumThemeAvatarColorPalette: MomentumThemeAvatarColorPaletteProtocol {
    private let light: any MomentumThemeAvatarColorPaletteProtocol = LightMomentumThemeAvatarColorPalette()
    private let dark: any MomentumThemeAvatarColorPaletteProtocol = DarkMomentumThemeAvatarColorPalette()
    open var defaultColor: UIColor { return systemColor(light: light, dark: dark, keyPath: \.defaultColor) }
    open var cobalt: UIColor { return systemColor(light: light, dark: dark, keyPath: \.cobalt) }
    open var cyan: UIColor { return systemColor(light: light, dark: dark, keyPath: \.cyan) }
    open var gold: UIColor { return systemColor(light: light, dark: dark, keyPath: \.gold) }
    open var lime: UIColor { return systemColor(light: light, dark: dark, keyPath: \.lime) }
    open var mint: UIColor { return systemColor(light: light, dark: dark, keyPath: \.mint) }
    open var orange: UIColor { return systemColor(light: light, dark: dark, keyPath: \.orange) }
    open var pink: UIColor { return systemColor(light: light, dark: dark, keyPath: \.pink) }
    open var purple: UIColor { return systemColor(light: light, dark: dark, keyPath: \.purple) }
    open var slate: UIColor { return systemColor(light: light, dark: dark, keyPath: \.slate) }
    open var violet: UIColor { return systemColor(light: light, dark: dark, keyPath: \.violet) }
    open var yellow: UIColor { return systemColor(light: light, dark: dark, keyPath: \.yellow) }
    open var hover: UIColor { return systemColor(light: light, dark: dark, keyPath: \.hover) }
    open var pressed: UIColor { return systemColor(light: light, dark: dark, keyPath: \.pressed) }
    open var glassNormal: UIColor { return systemColor(light: light, dark: dark, keyPath: \.glassNormal) }
    open var glassActive: UIColor { return systemColor(light: light, dark: dark, keyPath: \.glassActive) }
    public init() {}
}
open class SystemMomentumThemeGradientDividerColorPalette: MomentumThemeGradientDividerColorPaletteProtocol {
    private let light: any MomentumThemeGradientDividerColorPaletteProtocol = LightMomentumThemeGradientDividerColorPalette()
    private let dark: any MomentumThemeGradientDividerColorPaletteProtocol = DarkMomentumThemeGradientDividerColorPalette()
    open var defaultNormal0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.defaultNormal0) }
    open var defaultNormal1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.defaultNormal1) }
    open var defaultNormal2: UIColor { return systemColor(light: light, dark: dark, keyPath: \.defaultNormal2) }
    open var defaultNormal3: UIColor { return systemColor(light: light, dark: dark, keyPath: \.defaultNormal3) }
    open var defaultHover0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.defaultHover0) }
    open var defaultHover1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.defaultHover1) }
    open var defaultHover2: UIColor { return systemColor(light: light, dark: dark, keyPath: \.defaultHover2) }
    open var defaultHover3: UIColor { return systemColor(light: light, dark: dark, keyPath: \.defaultHover3) }
    open var errorNormal0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.errorNormal0) }
    open var errorNormal1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.errorNormal1) }
    open var errorNormal2: UIColor { return systemColor(light: light, dark: dark, keyPath: \.errorNormal2) }
    open var errorNormal3: UIColor { return systemColor(light: light, dark: dark, keyPath: \.errorNormal3) }
    open var errorHover0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.errorHover0) }
    open var errorHover1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.errorHover1) }
    open var errorHover2: UIColor { return systemColor(light: light, dark: dark, keyPath: \.errorHover2) }
    open var errorHover3: UIColor { return systemColor(light: light, dark: dark, keyPath: \.errorHover3) }
    open var warningNormal0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.warningNormal0) }
    open var warningNormal1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.warningNormal1) }
    open var warningNormal2: UIColor { return systemColor(light: light, dark: dark, keyPath: \.warningNormal2) }
    open var warningNormal3: UIColor { return systemColor(light: light, dark: dark, keyPath: \.warningNormal3) }
    open var warningHover0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.warningHover0) }
    open var warningHover1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.warningHover1) }
    open var warningHover2: UIColor { return systemColor(light: light, dark: dark, keyPath: \.warningHover2) }
    open var warningHover3: UIColor { return systemColor(light: light, dark: dark, keyPath: \.warningHover3) }
    open var announceNormal0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.announceNormal0) }
    open var announceNormal1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.announceNormal1) }
    open var announceNormal2: UIColor { return systemColor(light: light, dark: dark, keyPath: \.announceNormal2) }
    open var announceNormal3: UIColor { return systemColor(light: light, dark: dark, keyPath: \.announceNormal3) }
    open var announceHover0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.announceHover0) }
    open var announceHover1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.announceHover1) }
    open var announceHover2: UIColor { return systemColor(light: light, dark: dark, keyPath: \.announceHover2) }
    open var announceHover3: UIColor { return systemColor(light: light, dark: dark, keyPath: \.announceHover3) }
    open var successNormal0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.successNormal0) }
    open var successNormal1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.successNormal1) }
    open var successNormal2: UIColor { return systemColor(light: light, dark: dark, keyPath: \.successNormal2) }
    open var successNormal3: UIColor { return systemColor(light: light, dark: dark, keyPath: \.successNormal3) }
    open var successHover0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.successHover0) }
    open var successHover1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.successHover1) }
    open var successHover2: UIColor { return systemColor(light: light, dark: dark, keyPath: \.successHover2) }
    open var successHover3: UIColor { return systemColor(light: light, dark: dark, keyPath: \.successHover3) }
    open var orangeNormal0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.orangeNormal0) }
    open var orangeNormal1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.orangeNormal1) }
    open var orangeNormal2: UIColor { return systemColor(light: light, dark: dark, keyPath: \.orangeNormal2) }
    open var orangeNormal3: UIColor { return systemColor(light: light, dark: dark, keyPath: \.orangeNormal3) }
    open var orangeHover0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.orangeHover0) }
    open var orangeHover1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.orangeHover1) }
    open var orangeHover2: UIColor { return systemColor(light: light, dark: dark, keyPath: \.orangeHover2) }
    open var orangeHover3: UIColor { return systemColor(light: light, dark: dark, keyPath: \.orangeHover3) }
    open var purpleNormal0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.purpleNormal0) }
    open var purpleNormal1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.purpleNormal1) }
    open var purpleNormal2: UIColor { return systemColor(light: light, dark: dark, keyPath: \.purpleNormal2) }
    open var purpleNormal3: UIColor { return systemColor(light: light, dark: dark, keyPath: \.purpleNormal3) }
    open var purpleHover0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.purpleHover0) }
    open var purpleHover1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.purpleHover1) }
    open var purpleHover2: UIColor { return systemColor(light: light, dark: dark, keyPath: \.purpleHover2) }
    open var purpleHover3: UIColor { return systemColor(light: light, dark: dark, keyPath: \.purpleHover3) }
    open var verticalNormal0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.verticalNormal0) }
    open var verticalNormal1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.verticalNormal1) }
    open var verticalNormal2: UIColor { return systemColor(light: light, dark: dark, keyPath: \.verticalNormal2) }
    open var verticalNormal3: UIColor { return systemColor(light: light, dark: dark, keyPath: \.verticalNormal3) }
    open var verticalHover0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.verticalHover0) }
    open var verticalHover1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.verticalHover1) }
    open var verticalHover2: UIColor { return systemColor(light: light, dark: dark, keyPath: \.verticalHover2) }
    open var verticalHover3: UIColor { return systemColor(light: light, dark: dark, keyPath: \.verticalHover3) }
    public init() {}
}
open class SystemMomentumThemeFocusColorPalette: MomentumThemeFocusColorPaletteProtocol {
    private let light: any MomentumThemeFocusColorPaletteProtocol = LightMomentumThemeFocusColorPalette()
    private let dark: any MomentumThemeFocusColorPaletteProtocol = DarkMomentumThemeFocusColorPalette()
    open var default0: UIColor { return systemColor(light: light, dark: dark, keyPath: \.default0) }
    open var default1: UIColor { return systemColor(light: light, dark: dark, keyPath: \.default1) }
    open var default2: UIColor { return systemColor(light: light, dark: dark, keyPath: \.default2) }
    public init() {}
}

private func systemColor<Palette>(light: Palette, dark: Palette, keyPath: KeyPath<Palette, UIColor>) -> UIColor {
    return UIColor { traitCollection in
        if traitCollection.userInterfaceStyle == .dark {
            return dark[keyPath: keyPath]
        } else {
            return light[keyPath: keyPath]
        }
    }
}
#endif