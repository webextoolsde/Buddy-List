import * as React from 'react';
import { createComponent } from '@lit/react';
import Component from '../../components/iconprovider';
import { TAG_NAME } from '../../components/iconprovider/iconprovider.constants';
/**
 * IconProvider component, which allows to be consumed from sub components
 * (see `providerUtils.consume` for how to consume)
 *
 * Bundling icons will be up to the consumer of this component, such
 * that only a url has to be passed in from which the icons will be
 * fetched.
 *
 * If `cacheStrategy` is provided, the IconProvider will cache the icons
 * in the selected cache (either web-api-cache or in-memory-cache),
 * to avoid fetching the same icon multiple times over the network.
 * This is useful when the same icon is used multiple times in the application.
 * To consider:
 * - The `in-memory-cache` is not persisted and will be lost when the
 * IconProvider is removed from the DOM.
 * - The `web-api-cache` is persisted, but only works in https environments
 * (https://developer.mozilla.org/en-US/docs/Web/API/Cache).
 *
 * @tagname mdc-iconprovider
 *
 * @slot - children
 */
const reactWrapper = createComponent({
    tagName: TAG_NAME,
    elementClass: Component,
    react: React,
    events: {},
    displayName: 'IconProvider',
});
export default reactWrapper;
