import type { CSSResult } from 'lit';
import FormfieldWrapper from '../formfieldwrapper/formfieldwrapper.component';
declare const FormfieldGroup_base: import("../../utils/mixins/index.types").Constructor<import("../../utils/mixins/DataAriaLabelMixin").DataAriaLabelMixinInterface> & typeof FormfieldWrapper;
/**
 * `mdc-formfieldgroup` component, groups the form field components together.
 * All passed in children will have a gap of 12px (0.75rem) each applied.
 *
 * This component is specifically for creating a `checkbox` group and a `toggle` group component.
 * For the radiogroup use the RadioGroup component instead.
 *
 * The header text and description text are displayed above the items with accessible labels.<br/>
 * The consumer has to provide atleast the header-text or the aria-label,
 * like one of them <b>has</b> to be passed in always, otherwise its not accessible.
 *
 * The role will be set to `group`.
 * The aria-label will be set with the data-aria-label property.
 * The aria-labelledby will be set with the header id which contains the header text information.
 * The aria-describedby will be set with the description id which contains the description text information.
 *
 * @tagname mdc-formfieldgroup
 *
 * @slot default - This is a default slot for checkbox or toggle components.
 */
declare class FormfieldGroup extends FormfieldGroup_base {
    /**
     * @internal
     * This is used to set the role of the component as `radiogroup` if this is true and to 'group' if it is false.
     */
    protected isRadio: boolean;
    constructor();
    render(): import("lit-html").TemplateResult<1>;
    static styles: Array<CSSResult>;
}
export default FormfieldGroup;
