import { Service } from "../../index";
import userPrefs = Service.userPrefs;
export declare function userPrefsService(): {
    fetchUserPreferences: (p: {
        userId: string;
        orgId: string;
    }, cb?: ((res: import("axios").AxiosResponse<userPrefs.savedUserPreferencesResponse>) => void) | undefined) => Promise<userPrefs.savedUserPreferencesResponse>;
    saveUserPreferences: (p: {
        organizationId: string;
        id: string;
        data: userPrefs.UserPreferences;
    }, cb?: ((res: import("axios").AxiosResponse<{}>) => void) | undefined) => Promise<{}>;
    updateUserPreferences: (p: {
        organizationId: string;
        id: string;
        data: userPrefs.UserPreferences;
    }, cb?: ((res: import("axios").AxiosResponse<{}>) => void) | undefined) => Promise<{}>;
    deleteUserPreferences: (p: {
        organizationId: string;
        id: string;
    }, cb?: ((res: import("axios").AxiosResponse<{}>) => void) | undefined) => Promise<{}>;
};
declare type userPrefsErrorIds = "Service.userPrefs.fetchUserPreferences" | "Service.userPrefs.saveUserPreferences" | "Service.userPrefs.updateUserPreferences" | "Service.userPrefs.deleteUserPreferences";
declare module "@uuip/unified-ui-platform-sdk" {
    namespace Err {
        interface Ids {
            "Service.userPrefs": userPrefsErrorIds;
        }
    }
}
declare module "../../index" {
    namespace Service.userPrefs {
        type UserPreferences = {
            selectedRoleName?: string;
            teamName: string | null;
            teamId: string | null;
            dialNumber?: string | null;
            isExtension?: boolean;
            extensionNumber: string;
            dialNumberValueForNonUS: string;
            isInternational: boolean;
            internationalPhoneNumber: string;
            countryCallingCode: string;
            countryCodeValue: string;
            isRememberMyCredentials: boolean;
            deviceType?: Service.Aqm.Agent.DeviceType;
            deviceId?: string | null;
        };
        type savedUserPreferencesResponse = {
            organizationId: string;
            id: string;
            desktopPreference: string;
        };
        type EUserPrefsSaved = {
            detail: {
                isPrefSaved: boolean;
            };
        };
        type EUserPrefs = {
            detail: {
                selectedRoleName?: string;
                teamName: string | null;
                teamId: string | null;
                dialNumber?: string | null;
                isExtension?: boolean;
                extensionNumber: string;
                dialNumberValueForNonUS: string;
                isInternational: boolean;
                internationalPhoneNumber: string;
                countryCallingCode: string;
                countryCodeValue: string;
                isRememberMyCredentials: boolean;
                deviceType?: Service.Aqm.Agent.DeviceType;
                deviceId?: string | null;
            };
        };
    }
}
export {};
//# sourceMappingURL=user-preferences-service.d.ts.map