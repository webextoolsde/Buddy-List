export declare namespace RTDTypes {
    type AgentDetails = {
        agentId: string;
        agentName: string;
        agentEmail?: string;
        agentState: string;
        agentStateDuration: string;
        phoneNumber: string;
        channelsName?: string;
        contactStatus?: string;
        contactStatusCode?: string;
        contactStatusTime?: string;
        contactQueueName?: string;
        totalContactDuration?: string;
        loginTime?: string;
        siteName?: string;
        teamName?: string;
        interactionId?: string;
        contactEventName?: string;
        isMonitored?: string;
        monitorUserId?: string;
        monitorFullName?: string;
        contactPhoneNumber?: string;
        activeParticipantsName?: string;
        consultedParticipantName?: string;
        activeParticipantsNumber?: string;
        consultedParticipantNumber?: string;
        recording?: string;
        actions?: ActionCellDetails;
        agentNameDetails?: AgentNameDetails;
    };
    type ActionCellDetails = {
        agentName: string;
        agentEmail?: string;
        agentId: string;
        monitoredBy?: string;
        supervisorId: string;
        isSupervisorMonitoring?: boolean;
        isReviewAndMonitorEnabled?: boolean;
        isConsultCall?: boolean;
    };
    type AgentNameDetails = {
        agentId: string;
        agentName: string;
        agentEmail?: string;
        agentState?: string;
    };
    type ParticipantDetails = {
        activeParticipantsName: string;
        activeParticipantsNumber: string;
        consultedParticipantName: string;
        consultedParticipantNumber: string;
    };
    type AgentGlobalStatus = RTD<{
        agentId: string;
        agentName: string;
        agentEmail: string;
        globalState: string;
        globalStateTimestamp: number;
        agentPhone: string;
        lastLoginTime: number;
        siteName: string;
        teamName: string;
        idleCodeName?: string | null;
        idleCodeId?: string | null;
    }>;
    type AgentChannelStatus = RTD<{
        agentId: string;
        agentName: string;
        contactStatus: string;
        contactStatusTimestamp: number;
        contactIngestionTimestamp: number;
        contactQueueName: string;
        teamName: string;
        siteName: string;
        channelType: string;
        interactionId?: string;
        channelId: string;
    }>;
    type RTD<T = any> = {
        key: string;
        operation: string;
        data: T;
    };
    type AgentContactStats = RTD<{
        orgId: string;
        interactionId: string;
        channelType: string;
        status: string;
        agentId: string;
        agentName: string;
        teamId: string;
        teamName: string;
        siteId: string;
        siteName: string;
        origin: string;
        destination: string;
        contactDirection: string;
        queueId: string;
        queueName: string;
        destinationAgentId: string | null;
        destinationAgentName: string | null;
        destinationAgentDNIS: string | null;
        eventName: string;
        contactIngestionTimestamp: number;
        eventTime: number;
        recording: string;
        monitorStatus: string;
        isMonitored: string;
        isBarged: boolean | null;
        monitorVisibility: string;
        monitorUserId: string;
        monitorFullName: string;
    }>;
}
//# sourceMappingURL=rtd-types.d.ts.map