import { AgentxServicesConfig } from "./config";
import { AgentxServices } from "./services/services";
export { AgentxServices };
export { RTDTypes } from "./services/rtd-types/rtd-types";
/**
 * Through SERVICE a developer is able to acess all AQM calls and subscribe to applicable Notifs responses.
 * Currently includes: `aqm` service
 */
export declare const SERVICE: AgentxService;
/**
 * Service namespace allows a developer to access typings for AQM requests, Notifs responses, as well as payload parameters.
 */
export declare namespace Service {
}
export declare type AgentxService = Omit<{
    readonly [k in keyof AgentxServices]: AgentxServices[k];
}, "init">;
export declare function initAgentxServices(config: AgentxServicesConfig, accessToken: string): Promise<void>;
export declare function updateAccessToken(accessToken: string): void;
/**
 * Return Tracking ID from Error Object
 * @param errorObj
 * @returns Tracking ID
 */
export declare const getTrackingIdFromErrorObject: (errorObj: any) => any;
/**
 * Gets rolename and forms it as per required display on Mixpanel
 * @param roleName
 * @returns
 */
export declare const formRoleNameForTelemetry: (roleName: string) => string;
//# sourceMappingURL=index.d.ts.map